COMMON_ID=64
COMMON_NAME=X[Com]Draw Universal Window
COMMAND_COLOR=5
TRIGGER=32
TRIGGER_TARGET=2000000
TRIGGER_VAL=0
MEMO=Draws what's stored in the database. Description is used only in "Display" mode.
VALINPUT_NUM=4
STRINPUT_NUM=0
VALINPUT_NAME_NUM=11
VALINPUT_NAME_0=Mode
VALINPUT_NAME_1=Cursor Position
VALINPUT_NAME_2=[Disp] Description
VALINPUT_NAME_3=[Disp] Animation
VALINPUT_NAME_4=
VALINPUT_NAME_5=
VALINPUT_NAME_6=
VALINPUT_NAME_7=
VALINPUT_NAME_8=
VALINPUT_NAME_9=0
VALINPUT_NAME_10=
LOADTYPE_NUM=10
LOADTYPE0=2
LOADTYPE1=0
LOADTYPE2=2
LOADTYPE3=2
LOADTYPE4=0
LOADTYPE5=0
LOADTYPE6=0
LOADTYPE7=0
LOADTYPE8=0
LOADTYPE9=0
CHOICE_STR_NUM=10
CHOICE_STR_0_NUM=4
CHOICE_STR_0_0=Display
CHOICE_STR_0_1=Display [For Battle Commands]
CHOICE_STR_0_2=Update (Scroll & Cursor Draw)
CHOICE_STR_0_3=Erase
CHOICE_STR_1_NUM=0
CHOICE_STR_2_NUM=5
CHOICE_STR_2_0=Don't Display
CHOICE_STR_2_1=Display at Top, Full Width
CHOICE_STR_2_2=Display at Bottom, Full Width
CHOICE_STR_2_3=Display Above Window
CHOICE_STR_2_4=Display Below Window
CHOICE_STR_3_NUM=7
CHOICE_STR_3_0=None
CHOICE_STR_3_1=Expand from Top-Left
CHOICE_STR_3_2=Expand from Bottom-Left
CHOICE_STR_3_3=Expand from Top-Right
CHOICE_STR_3_4=Expand from Bottom-Right
CHOICE_STR_3_5=Expand from Top-Center
CHOICE_STR_3_6=Expand from Bottom-Center
CHOICE_STR_4_NUM=0
CHOICE_STR_5_NUM=0
CHOICE_STR_6_NUM=0
CHOICE_STR_7_NUM=0
CHOICE_STR_8_NUM=0
CHOICE_STR_9_NUM=0
CHOICE_VAL_NUM=10
CHOICE_VAL_0_NUM=4
CHOICE_VAL_0_0=0
CHOICE_VAL_0_1=2
CHOICE_VAL_0_2=1
CHOICE_VAL_0_3=-1
CHOICE_VAL_1_NUM=0
CHOICE_VAL_2_NUM=5
CHOICE_VAL_2_0=0
CHOICE_VAL_2_1=1
CHOICE_VAL_2_2=2
CHOICE_VAL_2_3=3
CHOICE_VAL_2_4=4
CHOICE_VAL_3_NUM=7
CHOICE_VAL_3_0=0
CHOICE_VAL_3_1=1
CHOICE_VAL_3_2=2
CHOICE_VAL_3_3=3
CHOICE_VAL_3_4=4
CHOICE_VAL_3_5=5
CHOICE_VAL_3_6=6
CHOICE_VAL_4_NUM=0
CHOICE_VAL_5_NUM=0
CHOICE_VAL_6_NUM=0
CHOICE_VAL_7_NUM=0
CHOICE_VAL_8_NUM=0
CHOICE_VAL_9_NUM=0
DEFAULT_VAL_NUM=5
DEFAULT_VAL_0=0
DEFAULT_VAL_1=0
DEFAULT_VAL_2=0
DEFAULT_VAL_3=0
DEFAULT_VAL_4=0
RETURN_VAL_NAME=
RETURN_VAL_TARGET=-1
CSELF_NAME_0=Mode
CSELF_NAME_1=Cursor Position
CSELF_NAME_2=[Disp] Description
CSELF_NAME_3=[Disp] Animation
CSELF_NAME_4=
CSELF_NAME_5=Description Text
CSELF_NAME_6=Additional String
CSELF_NAME_7=Item Name
CSELF_NAME_8=Window Image File
CSELF_NAME_9=Cursor Image File
CSELF_NAME_10=Temp Variable A
CSELF_NAME_11=Temp Variable B
CSELF_NAME_12=Temp Variable C
CSELF_NAME_13=Temp Variable D
CSELF_NAME_14=Temp Variable E
CSELF_NAME_15=
CSELF_NAME_16=
CSELF_NAME_17=
CSELF_NAME_18=Small Font Size
CSELF_NAME_19=Base Font Size
CSELF_NAME_20=Base Picture ID
CSELF_NAME_21=Temp Picture ID
CSELF_NAME_22=Display X
CSELF_NAME_23=Display Y
CSELF_NAME_24=Width
CSELF_NAME_25=Height
CSELF_NAME_26=Columns
CSELF_NAME_27=Rows
CSELF_NAME_28=
CSELF_NAME_29=Update-All Flag
CSELF_NAME_30=Description Window X
CSELF_NAME_31=Description Window Y
CSELF_NAME_32=Description Window Width
CSELF_NAME_33=Description Window Height
CSELF_NAME_34=[Stored] Cursor Base X
CSELF_NAME_35=[Stored] Cursor Base Y
CSELF_NAME_36=[Stored] Cursor Width
CSELF_NAME_37=[Stored] Cursor Height
CSELF_NAME_38=[Stored] Cursor Move H Amount
CSELF_NAME_39=[Stored] Cursor Move V Amount
CSELF_NAME_40=Total Items
CSELF_NAME_41=Temp Item Display X
CSELF_NAME_42=Temp Item Display Y
CSELF_NAME_43=Item Position Being Processed
CSELF_NAME_44=Scroll Position
CSELF_NAME_45=Scroll Change Amount
CSELF_NAME_46=Single Item Display Flag
CSELF_NAME_47=Number Display Shift Amount
CSELF_NAME_48=Item Display Start Y
CSELF_NAME_49=Item Horizontal Zoom Level
CSELF_NAME_50=Up/Down Arrow X
CSELF_NAME_51=Up/Down Arrow Y
CSELF_NAME_52=
CSELF_NAME_53=Color R
CSELF_NAME_54=Color G
CSELF_NAME_55=Color B
CSELF_NAME_56=
CSELF_NAME_57=Temp Opacity
CSELF_NAME_58=
CSELF_NAME_59=
CSELF_NAME_60=Item Left-Align Flag (Off = Center)
CSELF_NAME_61=Scroll Bar Display Flag
CSELF_NAME_62=
CSELF_NAME_63=Window Opacity
CSELF_NAME_64=Item Fast Display
CSELF_NAME_65=
CSELF_NAME_66=Temp Total Items
CSELF_NAME_67=
CSELF_NAME_68=
CSELF_NAME_69=
CSELF_NAME_70=
CSELF_NAME_71=
CSELF_NAME_72=
CSELF_NAME_73=
CSELF_NAME_74=
CSELF_NAME_75=
CSELF_NAME_76=
CSELF_NAME_77=
CSELF_NAME_78=
CSELF_NAME_79=
CSELF_NAME_80=
CSELF_NAME_81=
CSELF_NAME_82=
CSELF_NAME_83=
CSELF_NAME_84=
CSELF_NAME_85=
CSELF_NAME_86=
CSELF_NAME_87=
CSELF_NAME_88=Coordinate Scale X [x10]
CSELF_NAME_89=Coordinate Scale Y [x10]
CSELF_NAME_90=
CSELF_NAME_91=
CSELF_NAME_92=
CSELF_NAME_93=
CSELF_NAME_94=
CSELF_NAME_95=
CSELF_NAME_96=
CSELF_NAME_97=
CSELF_NAME_98=
CSELF_NAME_99=
COMMAND_NUM=874
--
WoditorEvCOMMAND_START
[103][0,1]<0>()("―――――――――――――――――――――――――――――――――――")
[103][0,1]<0>()("[Process Overview]")
[103][0,1]<0>()("  This common event is called after executing the <dqrt>Create [type] List<dqrt> event,")
[103][0,1]<0>()("  and it displays a screen listing items, equipment, etc. stored in the Variable DB.")
[103][0,1]<0>()(" ")
[103][0,1]<0>()("  In Variable DB <dqrt>Base System Variables,<dqrt> you can set the window position, size, rows, and columns.")
[103][0,1]<0>()("  If they are all 0, a full-screen window with 2 columns and 10 rows will be displayed.")
[103][0,1]<0>()("  (* If the Rows setting is 2 or lower, the behavior will be abnormal.)")
[103][0,1]<0>()(" ")
[103][0,1]<0>()("  When the Universal Window is erased, the aforementioned settings are reset to 0,")
[103][0,1]<0>()("  so you must set them again every time you use it.")
[103][0,1]<0>()(" ")
[103][0,1]<0>()("  Also, you can't use more than one Universal Window at a time.")
[103][0,1]<0>()("―――――――――――――――――――――――――――――――――――")
[103][0,1]<0>()("[Databases Accessed by This Common Event]")
[103][0,1]<0>()("  Variable DB <dqrt>Universal Window Items<dqrt>")
[103][0,1]<0>()("  Variable DB <dqrt>Base System Variables<dqrt>")
[103][0,1]<0>()(" ")
[103][0,1]<0>()("[Other Common Events Called from Here]")
[103][0,1]<0>()("  None")
[103][0,1]<0>()(" ")
[103][0,1]<0>()("[Pictures]")
[103][0,1]<0>()("  Base Picture ID + 0 = Main Window")
[103][0,1]<0>()("  Base Picture ID + 1 = Description Window")
[103][0,1]<0>()("  Base Picture ID + 2 = Description Text")
[103][0,1]<0>()("  Base Picture ID + 3 = Cursor")
[103][0,1]<0>()("  Base Picture ID + 4 = Up Arrow")
[103][0,1]<0>()("  Base Picture ID + 5 = Down Arrow")
[103][0,1]<0>()("  Base Picture ID + 6 = Scroll Bar")
[103][0,1]<0>()(" ")
[103][0,1]<0>()("  Base Picture ID + 9-209 = Items (1 picture each item)")
[103][0,1]<0>()("[Usage Example]")
[103][0,1]<0>()("  There are examples in the common event <dqrt>■■[Common: Screen Processing]■■<dqrt>.")
[103][0,1]<0>()("―――――――――――――――――――――――――――――――――――")
[103][0,1]<0>()("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■")
[103][0,1]<0>()("  Set Parameters")
[103][0,1]<0>()("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■")
[103][0,1]<0>()("Set a fixed value.")
[121][4,0]<0>(1600020,15000,0,0)()
[103][0,1]<0>()("Load base parameters.")
[250][5,4]<0>(18,6,0,69632,1600018)("","Base System Variables","","")
[250][5,4]<0>(18,5,0,69632,1600019)("","Base System Variables","","")
[250][5,4]<0>(17,0,0,332288,1600008)("","Images/Sounds","","Window Image File")
[250][5,4]<0>(17,0,0,332288,1600009)("","Images/Sounds","","Cursor Image File")
[103][0,1]<0>()("Ver.2.20  Separated the coordinate scale into vertical and horizontal scales.")
[250][5,4]<0>(18,97,0,69632,1600088)("","Base System Variables","","")
[250][5,4]<0>(18,98,0,69632,1600089)("","Base System Variables","","")
[121][4,0]<0>(1600029,0,0,0)()
[121][4,0]<0>(1600063,255,0,0)()
[103][0,1]<0>()("Initialize.")
[121][4,0]<0>(1600029,0,0,0)()
[121][4,0]<0>(1600064,0,0,0)()
[111][7,0]<0>(2,1600000,0,2,1600000,2,2)()
[401][1,0]<0>(1)()
[103][0,1]<1>()("Normal mode.")
[121][4,0]<1>(1600060,1,0,0)()
[121][4,0]<1>(1600061,1,0,0)()
[0][0,0]<1>()()
[401][1,0]<0>(2)()
[103][0,1]<1>()("For battle commands.")
[121][4,0]<1>(1600060,0,0,0)()
[121][4,0]<1>(1600061,0,0,0)()
[121][4,0]<1>(1600000,0,0,0)()
[121][4,0]<1>(1600063,180,0,0)()
[121][4,0]<1>(1600064,1,0,0)()
[0][0,0]<1>()()
[499][0,0]<0>()()
[103][0,1]<0>()("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■")
[103][0,1]<0>()("  Main Processing Starts Here")
[103][0,1]<0>()("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■")
[111][4,0]<0>(1,1600000,-1,2)()
[401][1,0]<0>(1)()
[103][0,1]<1>()("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■")
[103][0,1]<1>()("When in <dqrt>Erase<dqrt> Mode")
[103][0,1]<1>()("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■")
[121][4,0]<1>(1600060,1,0,0)()
[121][4,0]<1>(1600061,1,0,0)()
[103][0,1]<1>()("Erase cursor.")
[121][4,0]<1>(1600021,1600020,3,0)()
[150][2,0]<1>(67,1600021)()
[150][3,0]<1>(69378,1600021,0)()
[103][0,1]<1>()("Erase everything else.")
[121][4,0]<1>(1600010,1600020,999,0)()
[121][4,0]<1>(1600021,1600020,0,0)()
[150][3,0]<1>(16777539,1600020,1600010)()
[111][4,0]<1>(17,1600003,1,1)()
[401][1,0]<1>(1)()
[103][0,1]<2>()("If animation is specified, erase the main window accordingly.")
[150][6,0]<2>(16777218,1600020,3,1,0,1600010)()
[111][7,0]<2>(2,1600003,4,3,1600003,5,1)()
[401][1,0]<2>(1)()
[103][0,1]<3>()("Set the zoom level to 0%, then erase.")
[150][13,0]<3>(69377,1600021,5,0,0,-1000000,0,0,0,0,-1000000,0,16777216)()
[150][14,0]<3>(69377,1600021,4,0,0,-1000000,0,0,0,0,-1000000,0,16777216,2)()
[150][14,0]<3>(69377,1600021,4,0,0,-1000000,0,0,0,0,-1000000,0,16777216,4)()
[0][0,0]<3>()()
[401][1,0]<2>(2)()
[103][0,1]<3>()("Shrink up or down, then end.")
[150][19,0]<3>(3215105,1600021,5,0,0,-1000000,0,0,0,100,-1000000,0,16777216,0,0,0,0,0,0)()
[150][19,0]<3>(3215105,1600021,4,0,0,-1000000,0,0,0,100,-1000000,0,16777216,2,0,0,0,0,0)()
[150][19,0]<3>(3215105,1600021,4,0,0,-1000000,0,0,0,100,-1000000,0,16777216,4,0,0,0,0,0)()
[0][0,0]<3>()()
[499][0,0]<2>()()
[150][4,0]<2>(2,1600021,0,8)()
[180][1,0]<2>(7)()
[0][0,0]<2>()()
[420][1,0]<1>(0)()
[150][6,0]<2>(16777538,1600020,0,0,0,1600010)()
[0][0,0]<2>()()
[499][0,0]<1>()()
[172][0,0]<1>()()
[0][0,0]<1>()()
[499][0,0]<0>()()
[111][4,0]<0>(1,1600000,0,2)()
[401][1,0]<0>(1)()
[103][0,1]<1>()("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■")
[103][0,1]<1>()("When in <dqrt>Display<dqrt> Mode")
[103][0,1]<1>()("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■")
[179][1,0]<1>(1)()
[103][0,1]<2>()("Get window size and more from Base System Variables.")
[250][5,4]<2>(18,9,0,69632,1600022)("","Base System Variables","","")
[250][5,4]<2>(18,10,0,69632,1600023)("","Base System Variables","","")
[250][5,4]<2>(18,11,0,69632,1600024)("","Base System Variables","","")
[250][5,4]<2>(18,12,0,69632,1600025)("","Base System Variables","","")
[250][5,4]<2>(18,13,0,69632,1600026)("","Base System Variables","","")
[250][5,4]<2>(18,14,0,69632,1600027)("","Base System Variables","","")
[103][0,1]<2>()(" ")
[103][0,1]<2>()("The description window height can be specified externally.")
[250][5,4]<2>(18,16,0,69632,1600033)("","Base System Variables","","")
[103][0,1]<2>()("If the value is 0, use the default value.")
[111][4,0]<2>(1,1600024,0,2)()
[401][1,0]<2>(1)()
[121][4,0]<3>(1600024,32,1600088,8192)()
[0][0,0]<3>()()
[499][0,0]<2>()()
[111][4,0]<2>(1,1600025,0,2)()
[401][1,0]<2>(1)()
[121][4,0]<3>(1600025,24,1600089,8192)()
[0][0,0]<3>()()
[499][0,0]<2>()()
[111][4,0]<2>(1,1600026,0,2)()
[401][1,0]<2>(1)()
[121][4,0]<3>(1600026,2,0,0)()
[0][0,0]<3>()()
[499][0,0]<2>()()
[111][4,0]<2>(1,1600027,0,2)()
[401][1,0]<2>(1)()
[121][4,0]<3>(1600027,14,0,0)()
[0][0,0]<3>()()
[499][0,0]<2>()()
[111][4,0]<2>(1,1600033,0,2)()
[401][1,0]<2>(1)()
[121][4,0]<3>(1600033,2,1600088,8192)()
[0][0,0]<3>()()
[499][0,0]<2>()()
[0][0,0]<2>()()
[498][0,0]<1>()()
[179][1,0]<1>(1)()
[103][0,1]<2>()("Display description, and adjust main window.")
[103][0,1]<2>()("Picture ID is <dqrt>Base Picture ID + 1.<dqrt>")
[111][10,0]<2>(19,1600002,0,2,1600002,1,2,1600002,2,2)()
[401][1,0]<2>(1)()
[103][0,1]<3>()("Don't display (erase) description.")
[121][4,0]<3>(1600021,1600020,1,0)()
[150][3,0]<3>(66,1600021,0)()
[121][4,0]<3>(1600021,1600020,2,0)()
[150][3,0]<3>(66,1600021,0)()
[0][0,0]<3>()()
[401][1,0]<2>(2)()
[103][0,1]<3>()("Display description at top with full width.")
[103][0,1]<3>()("Calculate position and size.")
[121][4,0]<3>(1600030,0,0,0)()
[121][4,0]<3>(1600031,0,0,0)()
[121][4,0]<3>(1600032,32,1600088,8192)()
[103][0,1]<3>()("Display description window.")
[121][4,0]<3>(1600021,1600020,1,0)()
[150][2,0]<3>(67,1600021)()
[150][12,0]<3>(64,1600021,0,1600032,1600033,1,255,1600030,1600031,100,0,1600008)()
[103][0,1]<3>()("Display empty description text.")
[121][4,0]<3>(1600010,1600030,0,0)()
[121][4,0]<3>(1600010,1600032,2,12544)()
[121][4,0]<3>(1600011,1600031,0,0)()
[121][4,0]<3>(1600011,1600033,2,12544)()
[121][4,0]<3>(1600021,1600020,2,0)()
[150][2,0]<3>(67,1600021)()
[150][11,1]<3>(4128,1600021,0,1,1,1,255,1600010,1600011,100,0)("\f[\cself[18]]\space[0]")
[103][0,1]<3>()("If it affects the main window, adjust size.")
[121][4,0]<3>(1600010,1600031,1600033,0)()
[121][4,0]<3>(1600010,1600023,0,512)()
[121][4,0]<3>(1600010,0,0,1536)()
[121][4,0]<3>(1600023,1600010,0,256)()
[0][0,0]<3>()()
[401][1,0]<2>(3)()
[103][0,1]<3>()("Display description at bottom with full width.")
[103][0,1]<3>()("Calculate position and size.")
[121][4,0]<3>(1600030,0,0,0)()
[121][4,0]<3>(1600031,24,1600089,8192)()
[121][4,0]<3>(1600031,1600033,0,512)()
[121][4,0]<3>(1600032,32,1600088,8192)()
[103][0,1]<3>()("Display description window.")
[121][4,0]<3>(1600021,1600020,1,0)()
[150][2,0]<3>(67,1600021)()
[150][12,0]<3>(64,1600021,0,1600032,1600033,1,255,1600030,1600031,100,0,1600008)()
[103][0,1]<3>()("Display empty description text.")
[121][4,0]<3>(1600010,1600030,0,0)()
[121][4,0]<3>(1600010,1600032,2,12544)()
[121][4,0]<3>(1600011,1600031,0,0)()
[121][4,0]<3>(1600011,1600033,2,12544)()
[121][4,0]<3>(1600021,1600020,2,0)()
[150][2,0]<3>(67,1600021)()
[150][11,1]<3>(4128,1600021,0,1,1,1,255,1600010,1600011,100,0)("\f[\cself[18]]\space[0]")
[103][0,1]<3>()("If it affects the main window, adjust size.")
[121][4,0]<3>(1600010,1600023,1600025,0)()
[121][4,0]<3>(1600010,1600031,0,512)()
[121][4,0]<3>(1600010,0,0,1536)()
[121][4,0]<3>(1600025,1600010,0,512)()
[0][0,0]<3>()()
[420][1,0]<2>(0)()
[111][7,0]<3>(2,1600002,3,2,1600002,4,2)()
[401][1,0]<3>(1)()
[103][0,1]<4>()("Display description above window.")
[103][0,1]<4>()("Calculate position and size.")
[121][4,0]<4>(1600030,1600022,0,0)()
[121][4,0]<4>(1600031,1600023,0,0)()
[121][4,0]<4>(1600031,1600033,0,512)()
[121][4,0]<4>(1600032,1600024,0,0)()
[103][0,1]<4>()("Display description window.")
[121][4,0]<4>(1600021,1600020,1,0)()
[150][2,0]<4>(67,1600021)()
[150][12,0]<4>(64,1600021,0,1600032,1600033,1,255,1600030,1600031,100,0,1600008)()
[103][0,1]<4>()("Display empty description text.")
[121][4,0]<4>(1600010,1600030,0,0)()
[121][4,0]<4>(1600010,1600032,2,12544)()
[121][4,0]<4>(1600011,1600031,0,0)()
[121][4,0]<4>(1600011,1600033,2,12544)()
[121][4,0]<4>(1600021,1600020,2,0)()
[150][2,0]<4>(67,1600021)()
[150][11,1]<4>(4128,1600021,0,1,1,1,255,1600010,1600011,100,0)("\f[\cself[18]]\space[0]")
[0][0,0]<4>()()
[401][1,0]<3>(2)()
[103][0,1]<4>()("Display description below window.")
[103][0,1]<4>()("Calculate position and size.")
[121][4,0]<4>(1600030,1600022,0,0)()
[121][4,0]<4>(1600031,1600023,1600025,0)()
[121][4,0]<4>(1600032,1600024,0,0)()
[103][0,1]<4>()("Display description window.")
[121][4,0]<4>(1600021,1600020,1,0)()
[150][2,0]<4>(67,1600021)()
[150][12,0]<4>(64,1600021,0,1600032,1600033,1,255,1600030,1600031,100,0,1600008)()
[103][0,1]<4>()("Display empty description text.")
[121][4,0]<4>(1600010,1600030,0,0)()
[121][4,0]<4>(1600010,1600032,2,12544)()
[121][4,0]<4>(1600011,1600031,0,0)()
[121][4,0]<4>(1600011,1600033,2,12544)()
[121][4,0]<4>(1600021,1600020,2,0)()
[150][2,0]<4>(67,1600021)()
[150][11,1]<4>(4128,1600021,0,1,1,1,255,1600010,1600011,100,0)("\f[\cself[18]]\space[0]")
[0][0,0]<4>()()
[499][0,0]<3>()()
[0][0,0]<3>()()
[499][0,0]<2>()()
[0][0,0]<2>()()
[498][0,0]<1>()()
[103][0,1]<1>()("1. Display main window.")
[121][4,0]<1>(1600021,1600020,0,0)()
[150][2,0]<1>(67,1600021)()
[150][12,0]<1>(64,1600021,0,1600024,1600025,1,1600063,1600022,1600023,100,0,1600008)()
[111][10,0]<1>(3,1600003,1,2,1600003,2,2,1600003,3,2)()
[401][1,0]<1>(1)()
[103][0,1]<2>()("Slide in from the top-left.")
[121][4,0]<2>(1600041,1600022,0,0)()
[121][4,0]<2>(1600042,1600023,0,0)()
[150][12,0]<2>(64,1600021,0,1600024,1600025,1,255,1600041,1600042,100,0,1600008)()
[150][13,0]<2>(69377,1600021,0,0,0,-1000000,0,0,0,0,-1000000,0,16777216)()
[150][13,0]<2>(69377,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216)()
[150][14,0]<2>(69377,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,3)()
[150][14,0]<2>(69377,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,5)()
[0][0,0]<2>()()
[401][1,0]<1>(2)()
[103][0,1]<2>()("Slide in from the bottom-left.")
[121][4,0]<2>(1600041,1600022,0,0)()
[121][4,0]<2>(1600042,1600023,1600025,0)()
[150][12,0]<2>(8256,1600021,0,1600024,1600025,1,255,1600041,1600042,100,0,1600008)()
[150][13,0]<2>(69377,1600021,0,0,0,-1000000,0,0,0,0,-1000000,0,16777216)()
[150][13,0]<2>(69377,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216)()
[150][14,0]<2>(69377,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,3)()
[150][14,0]<2>(69377,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,5)()
[0][0,0]<2>()()
[401][1,0]<1>(3)()
[103][0,1]<2>()("Slide in from the top-right.")
[121][4,0]<2>(1600041,1600022,1600024,0)()
[121][4,0]<2>(1600042,1600023,0,0)()
[150][12,0]<2>(12352,1600021,0,1600024,1600025,1,255,1600041,1600042,100,0,1600008)()
[150][13,0]<2>(69377,1600021,0,0,0,-1000000,0,0,0,0,-1000000,0,16777216)()
[150][13,0]<2>(69377,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216)()
[150][14,0]<2>(69377,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,3)()
[150][14,0]<2>(69377,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,5)()
[0][0,0]<2>()()
[499][0,0]<1>()()
[111][10,0]<1>(3,1600003,4,2,1600003,5,2,1600003,6,2)()
[401][1,0]<1>(1)()
[103][0,1]<2>()("Slide in from the bottom-right.")
[121][4,0]<2>(1600041,1600022,1600024,0)()
[121][4,0]<2>(1600042,1600023,1600025,0)()
[150][12,0]<2>(16448,1600021,0,1600024,1600025,1,255,1600041,1600042,100,0,1600008)()
[150][13,0]<2>(69377,1600021,0,0,0,-1000000,0,0,0,0,-1000000,0,16777216)()
[150][13,0]<2>(69377,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216)()
[150][14,0]<2>(69377,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,3)()
[150][14,0]<2>(69377,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,5)()
[0][0,0]<2>()()
[401][1,0]<1>(2)()
[103][0,1]<2>()("Slide in from the top-center.")
[121][4,0]<2>(1600041,1600022,0,0)()
[121][4,0]<2>(1600042,1600023,0,0)()
[150][12,0]<2>(64,1600021,0,1600024,1600025,1,255,1600041,1600042,100,0,1600008)()
[150][19,0]<2>(3215105,1600021,0,0,0,-1000000,0,0,0,100,-1000000,0,16777216,0,0,0,0,0,0)()
[150][19,0]<2>(3215105,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,0,0,0,0,0,100)()
[150][19,0]<2>(3215105,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,3,0,0,0,0,100)()
[150][19,0]<2>(3215105,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,5,0,0,0,0,100)()
[0][0,0]<2>()()
[401][1,0]<1>(3)()
[103][0,1]<2>()("Slide in from the bottom-center.")
[121][4,0]<2>(1600041,1600022,0,0)()
[121][4,0]<2>(1600042,1600023,1600025,0)()
[150][12,0]<2>(8256,1600021,0,1600024,1600025,1,255,1600041,1600042,100,0,1600008)()
[150][19,0]<2>(3215105,1600021,0,0,0,-1000000,0,0,0,100,-1000000,0,16777216,0,0,0,0,0,0)()
[150][19,0]<2>(3215105,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,0,0,0,0,0,100)()
[150][19,0]<2>(3215105,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,3,0,0,0,0,100)()
[150][19,0]<2>(3215105,1600021,5,0,0,-1000000,1600063,0,0,100,-1000000,0,16777216,5,0,0,0,0,100)()
[0][0,0]<2>()()
[499][0,0]<1>()()
[103][0,1]<1>()("If there's animation, wait until it's displayed.")
[111][4,0]<1>(1,1600064,0,2)()
[401][1,0]<1>(1)()
[103][0,1]<2>()("However, only do this if Fast Display is off.")
[111][4,0]<2>(1,1600003,1,1)()
[401][1,0]<2>(1)()
[180][1,0]<3>(5)()
[0][0,0]<3>()()
[499][0,0]<2>()()
[0][0,0]<2>()()
[499][0,0]<1>()()
[103][0,1]<1>()("2. Set base cursor position.")
[103][0,1]<1>()("  (These cursor position values are used during <dqrt>update<dqrt> later in this event.)")
[121][4,0]<1>(1600034,1600022,0,0)()
[121][4,0]<1>(1600034,1600088,1,8448)()
[121][4,0]<1>(1600035,1600023,0,0)()
[121][4,0]<1>(1600035,1600089,2,12544)()
[103][0,1]<1>()("Calculate the cursor movement amount in the vertical and horizontal directions.")
[121][4,0]<1>(1600038,1600024,0,0)()
[121][4,0]<1>(1600038,1,1600088,8704)()
[121][4,0]<1>(1600038,1600026,0,1024)()
[121][4,0]<1>(1600039,1600025,0,0)()
[121][4,0]<1>(1600039,1,1600089,8704)()
[121][4,0]<1>(1600039,1600027,0,1024)()
[103][0,1]<1>()("Adjust cursor drawing size.")
[121][4,0]<1>(1600036,1600038,0,0)()
[121][4,0]<1>(1600036,1600088,0,512)()
[121][4,0]<1>(1600037,1600039,0,0)()
[121][4,0]<1>(1600037,1600019,0,1792)()
[103][0,1]<1>()("Slightly adjust the position based on the movement amount and the cursor height.")
[121][4,0]<1>(1600014,1600039,1600037,4096)()
[121][4,0]<1>(1600014,2,0,1024)()
[121][4,0]<1>(1600035,1600014,0,256)()
[103][0,1]<1>()("Erase all items.")
[121][4,0]<1>(1600021,1600020,9,0)()
[121][4,0]<1>(1600010,1600020,999,0)()
[150][3,0]<1>(16777219,1600021,1600010)()
[150][6,0]<1>(16777250,1600021,0,0,0,1600010)()
[103][0,1]<1>()(" ")
[103][0,1]<1>()("Continue by executing Mode 1 (Update) to display the items.")
[111][4,0]<1>(1,1600001,-1,2)()
[401][1,0]<1>(1)()
[106][0,1]<2>()("Reset.")
[250][5,4]<2>(18,15,0,65536,0)("","Base System Variables","","")
[0][0,0]<2>()()
[499][0,0]<1>()()
[121][4,0]<1>(1600000,1,0,0)()
[121][4,0]<1>(1600029,1,0,0)()
[0][0,0]<1>()()
[499][0,0]<0>()()
[99][1,0]<0>(0)()
[111][4,0]<0>(1,1600000,1,2)()
[401][1,0]<0>(1)()
[103][0,1]<1>()("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■")
[103][0,1]<1>()("<dqrt>Update<dqrt> Mode")
[103][0,1]<1>()("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■")
[179][1,0]<1>(1)()
[103][0,1]<2>()("First, if the cursor position exceeds the item count, reduce it.")
[250][5,4]<2>(18,17,0,69632,1600040)("","Base System Variables","","")
[111][4,0]<2>(1,1600001,1,1)()
[401][1,0]<2>(1)()
[121][4,0]<3>(1600001,1600040,1,5888)()
[0][0,0]<3>()()
[499][0,0]<2>()()
[103][0,1]<2>()("Recalculate the vertical scroll position here.")
[121][4,0]<2>(1600010,1600001,1600026,12288)()
[121][4,0]<2>(1600045,0,0,0)()
[179][1,0]<2>(1)()
[121][4,0]<3>(1600010,1600001,1600026,12288)()
[250][5,4]<3>(18,15,0,69632,1600011)("","Base System Variables","","")
[121][4,0]<3>(1600012,1600010,1600011,4096)()
[121][4,0]<3>(1600012,1,0,256)()
[179][1,0]<3>(0)()
[106][0,1]<4>()("\cself[10] \cself[11] \cself[12] is \cself[27] or higher?")
[0][0,0]<4>()()
[498][0,0]<3>()()
[111][4,0]<3>(1,1600012,1600027,1)()
[401][1,0]<3>(1)()
[103][0,1]<4>()("When the cursor is below the currently visible area.")
[103][0,1]<4>()("However, if the last item is visible, don't move it any further.")
[179][1,0]<4>(1)()
[121][4,0]<5>(1600066,1600040,0,0)()
[121][4,0]<5>(1600066,1600026,1,256)()
[121][4,0]<5>(1600013,1600066,1600026,12288)()
[121][4,0]<5>(1600013,1600013,1600027,4096)()
[111][4,0]<5>(1,1600013,1600011,0)()
[401][1,0]<5>(1)()
[103][0,1]<6>()("Move scroll position down.")
[121][4,0]<6>(1600045,1600012,1600027,4096)()
[250][5,4]<6>(18,15,0,65552,1600045)("","Base System Variables","","")
[179][1,0]<6>(0)()
[106][0,1]<7>()("+ Change \cself[45] Scroll \cdb[18:15:0]")
[0][0,0]<7>()()
[498][0,0]<6>()()
[0][0,0]<6>()()
[499][0,0]<5>()()
[0][0,0]<5>()()
[498][0,0]<4>()()
[0][0,0]<4>()()
[499][0,0]<3>()()
[0][0,0]<3>()()
[498][0,0]<2>()()
[111][4,0]<2>(1,1600045,0,2)()
[401][1,0]<2>(1)()
[179][1,0]<3>(1)()
[250][5,4]<4>(18,15,0,69632,1600011)("","Base System Variables","","")
[121][4,0]<4>(1600010,1600001,1600026,12288)()
[121][4,0]<4>(1600012,1600010,1600011,4096)()
[179][1,0]<4>(0)()
[106][0,1]<5>()("\cself[10] \cself[11] \cself[12] is less than 0?")
[0][0,0]<5>()()
[498][0,0]<4>()()
[121][4,0]<4>(1600012,1,0,512)()
[111][4,0]<4>(17,1600012,0,4)()
[401][1,0]<4>(1)()
[103][0,1]<5>()("When the cursor is above the currently visible area.")
[103][0,1]<5>()("Move scroll position up.")
[103][0,1]<5>()("However, if the fist item is visible, don't move it any further.")
[111][4,0]<5>(1,1600011,1,1)()
[401][1,0]<5>(1)()
[121][4,0]<6>(1600045,1600012,0,0)()
[250][5,4]<6>(18,15,0,65552,1600012)("","Base System Variables","","")
[250][5,4]<6>(18,15,0,65632,0)("","Base System Variables","","")
[179][1,0]<6>(0)()
[106][0,1]<7>()("- Change \cself[45] Scroll \cdb[18:15:0]")
[0][0,0]<7>()()
[498][0,0]<6>()()
[0][0,0]<6>()()
[499][0,0]<5>()()
[0][0,0]<5>()()
[420][1,0]<4>(0)()
[0][0,0]<5>()()
[499][0,0]<4>()()
[0][0,0]<4>()()
[498][0,0]<3>()()
[0][0,0]<3>()()
[499][0,0]<2>()()
[0][0,0]<2>()()
[498][0,0]<1>()()
[103][0,1]<1>()(" ")
[179][1,0]<1>(1)()
[103][0,1]<2>()("Calculate cursor position.")
[250][5,4]<2>(18,15,0,69632,1600043)("","Base System Variables","","")
[121][4,0]<2>(1600043,1600026,0,768)()
[121][4,0]<2>(1600043,1600001,1600043,4096)()
[103][0,1]<2>()("Calculate X position.")
[121][4,0]<2>(1600041,1600043,1600026,16384)()
[121][4,0]<2>(1600041,1600038,0,768)()
[121][4,0]<2>(1600041,1600034,0,256)()
[103][0,1]<2>()("Calculate Y position.")
[121][4,0]<2>(1600042,1600043,1600026,12288)()
[121][4,0]<2>(1600042,1600039,0,768)()
[121][4,0]<2>(1600042,1600035,0,256)()
[103][0,1]<2>()("Display cursor.")
[121][4,0]<2>(1600021,1600020,3,0)()
[150][2,0]<2>(67,1600021)()
[111][4,0]<2>(17,1600001,0,1)()
[401][1,0]<2>(1)()
[103][0,1]<3>()("If the cursor position is 0 or higher, display.")
[121][4,0]<3>(1600010,1600041,0,0)()
[121][4,0]<3>(1600010,1600036,2,12544)()
[121][4,0]<3>(1600011,1600042,0,0)()
[121][4,0]<3>(1600011,1600037,2,12544)()
[103][0,1]<3>()("Increase the size slightly, using the center as the origin.")
[121][4,0]<3>(1600036,1600088,2,12544)()
[121][4,0]<3>(1600037,1600089,4,12544)()
[150][12,0]<3>(4416,1600021,0,1600036,1600037,1,255,1600010,1600011,100,0,1600009)()
[290][7,0]<3>(80,20,1600021,1600021,100,100,100)()
[121][4,0]<3>(1600036,1600088,2,12800)()
[121][4,0]<3>(1600037,1600089,4,12800)()
[0][0,0]<3>()()
[420][1,0]<2>(0)()
[103][0,1]<3>()("If the cursor position is -1 or less, erase.")
[150][3,0]<3>(322,1600021,0)()
[0][0,0]<3>()()
[499][0,0]<2>()()
[0][0,0]<2>()()
[498][0,0]<1>()()
[103][0,1]<1>()(" ")
[103][0,1]<1>()("      Item Drawing Starts Here")
[103][0,1]<1>()(" ")
[99][1,0]<1>(0)()
[103][0,1]<1>()("Redraw all items.")
[250][5,4]<1>(18,17,0,69632,1600040)("","Base System Variables","","")
[250][5,4]<1>(18,15,0,69632,1600044)("","Base System Variables","","")
[103][0,1]<1>()("Calculate repeat count.")
[121][4,0]<1>(1600040,1600044,1600026,8704)()
[121][4,0]<1>(1600040,1600026,1600027,9984)()
[103][0,1]<1>()("Added in 2.02: When scrolling an entire page, update all.")
[121][4,0]<1>(1600010,1600045,0,2048)()
[111][4,0]<1>(1,1600010,1600040,1)()
[401][1,0]<1>(1)()
[121][4,0]<2>(1600029,1,0,0)()
[121][4,0]<2>(1600045,0,0,0)()
[121][4,0]<2>(1600021,1600020,9,0)()
[121][4,0]<2>(1600010,1600020,999,0)()
[150][3,0]<2>(16777219,1600021,1600010)()
[150][6,0]<2>(16777250,1600021,0,0,0,1600010)()
[0][0,0]<2>()()
[499][0,0]<1>()()
[103][0,1]<1>()("Calculate the item position at which to start processing.")
[121][4,0]<1>(1600043,1600044,1600026,8192)()
[103][0,1]<1>()("Adjust according to the scroll position.")
[111][7,0]<1>(2,1600045,-1,3,1600045,1,1)()
[401][1,0]<1>(1)()
[103][0,1]<2>()("If scrolled up, subtract <dqrt>disappeared rows at the bottom<dqrt> from the total items to be processed.")
[121][4,0]<2>(1600040,1600045,1600026,8704)()
[0][0,0]<2>()()
[401][1,0]<1>(2)()
[103][0,1]<2>()("If scrolled down, add <dqrt>disappeared rows at the top<dqrt> to the total items to be processed, and subtract it from the starting item position.")
[121][4,0]<2>(1600040,1600045,1600026,8448)()
[121][4,0]<2>(1600043,1600045,1600026,8704)()
[0][0,0]<2>()()
[499][0,0]<1>()()
[103][0,1]<1>()(" ")
[103][0,1]<1>()("Calculate the shift amount for the number display (used in \ax[ ] later).")
[103][0,1]<1>()("Change the shift amount calculation depending on the version. Modified in Ver.3.00.")
[111][7,0]<1>(2,9000115,300,4,9000115,300,1)()
[401][1,0]<1>(1)()
[121][4,0]<2>(1600047,1600036,1,8192)()
[111][4,0]<2>(1,9000084,0,2)()
[401][1,0]<2>(1)()
[103][0,1]<3>()("A 2x adjustment is required only when the resolution is 320x240 (for using \ax[?]).")
[121][4,0]<3>(1600047,1600036,2,8192)()
[0][0,0]<3>()()
[499][0,0]<2>()()
[0][0,0]<2>()()
[401][1,0]<1>(2)()
[103][0,1]<2>()("Since version 3.00, adjust using Sys119 <dqrt>Screen Resolution Multiplier<dqrt>. Modified in Ver.3.00.")
[121][4,0]<2>(1600047,1600036,9000119,8192)()
[0][0,0]<2>()()
[499][0,0]<1>()()
[103][0,1]<1>()("Display items one by one as pictures.")
[179][1,0]<1>(1600040)()
[103][0,1]<2>()("Calculate X position.")
[121][4,0]<2>(1600041,1600043,1600026,16384)()
[121][4,0]<2>(1600041,1600038,0,768)()
[121][4,0]<2>(1600041,1600034,0,256)()
[103][0,1]<2>()("Calculate Y position.")
[121][4,0]<2>(1600042,1600043,1600026,12288)()
[121][4,0]<2>(1600042,1600044,0,512)()
[121][4,0]<2>(1600042,1600039,0,768)()
[121][4,0]<2>(1600042,1600035,0,256)()
[103][0,1]<2>()(" ")
[121][4,0]<2>(1600048,1600042,0,0)()
[103][0,1]<2>()("Display item (up to 200).")
[121][4,0]<2>(1600021,1600043,200,16384)()
[121][4,0]<2>(1600021,1600020,9,256)()
[103][0,1]<2>()("Display.")
[121][4,0]<2>(1600046,0,0,0)()
[111][4,0]<2>(17,1600029,1,2)()
[401][1,0]<2>(1)()
[121][4,0]<3>(1600046,1,0,0)()
[0][0,0]<3>()()
[420][1,0]<2>(0)()
[103][0,1]<3>()("Determine if it's necessary to display the next item.")
[103][0,1]<3>()("First, display is only necessary when scrolling up or down.")
[111][7,0]<3>(2,1600045,-1,3,1600045,1,1)()
[401][1,0]<3>(1)()
[103][0,1]<4>()("If scrolled up, only the top scrolled-in row is newly displayed.")
[121][4,0]<4>(1600010,1600044,1600026,8192)()
[121][4,0]<4>(1600010,1600045,1600026,8704)()
[111][4,0]<4>(1,1600043,1600010,4)()
[401][1,0]<4>(1)()
[103][0,1]<5>()("Set display flag.")
[121][4,0]<5>(1600046,1,0,0)()
[103][0,1]<5>()("Shift the initial Y position for display.")
[121][4,0]<5>(1600048,1600042,0,0)()
[121][4,0]<5>(1600048,1600045,1600039,8448)()
[0][0,0]<5>()()
[499][0,0]<4>()()
[0][0,0]<4>()()
[401][1,0]<3>(2)()
[103][0,1]<4>()("If scrolled down, only the bottom scrolled-in row is newly displayed.")
[121][4,0]<4>(1600010,1600027,1600026,8192)()
[121][4,0]<4>(1600010,1600044,1600026,8448)()
[121][4,0]<4>(1600010,1600045,1600026,8704)()
[111][4,0]<4>(1,1600043,1600010,1)()
[401][1,0]<4>(1)()
[103][0,1]<5>()("Set display flag.")
[121][4,0]<5>(1600046,1,0,0)()
[103][0,1]<5>()("Shift the initial Y position for display.")
[121][4,0]<5>(1600048,1600042,0,0)()
[121][4,0]<5>(1600048,1600045,1600039,8448)()
[0][0,0]<5>()()
[499][0,0]<4>()()
[0][0,0]<4>()()
[499][0,0]<3>()()
[0][0,0]<3>()()
[499][0,0]<2>()()
[111][4,0]<2>(1,1600046,1,2)()
[401][1,0]<2>(1)()
[103][0,1]<3>()("Create item texts to display.")
[250][5,4]<3>(19,1600043,0,331776,1600007)("","Universal Window Items","","Item Text")
[250][5,4]<3>(19,1600043,3,331776,1600011)("","Universal Window Items","","Quantity Left/Point Cost")
[111][4,0]<3>(17,1600011,0,3)()
[401][1,0]<3>(1)()
[122][2,1]<4>(1600006,0)("")
[250][5,4]<4>(19,1600043,5,331792,1600006)("","Universal Window Items","","Number Suffix")
[0][0,0]<4>()()
[420][1,0]<3>(0)()
[250][5,4]<4>(19,1600043,4,331776,1600006)("","Universal Window Items","","Number Prefix")
[111][4,0]<4>(17,1600011,10,4)()
[401][1,0]<4>(1)()
[122][2,1]<5>(1600006,256)(" \cself[11]")
[0][0,0]<5>()()
[420][1,0]<4>(0)()
[122][2,1]<5>(1600006,256)("\cself[11]")
[0][0,0]<5>()()
[499][0,0]<4>()()
[250][5,4]<4>(19,1600043,5,331792,1600006)("","Universal Window Items","","Number Suffix")
[0][0,0]<4>()()
[499][0,0]<3>()()
[103][0,1]<3>()("Display only the item name as a picture, and get the picture's width.")
[121][4,0]<3>(1600049,100,0,0)()
[150][2,0]<3>(67,1600021)()
[150][11,1]<3>(32,1600021,0,1,1,1,0,1600041,1600048,100,0)("\f[\cself[19]]\cself[7]")
[179][1,0]<3>(1)()
[103][0,1]<4>()("If the text exceeds a certain percentage of the cursor width, shrink its width.")
[124][4,0]<4>(1600011,16384,1600021,2)()
[112][2,4]<4>(17,1600006)("","","","")
[401][1,0]<4>(1)()
[103][0,1]<5>()("If there's no numeric part, check whether the text exceeds the cursor width.")
[121][4,0]<5>(1600012,1600036,0,0)()
[0][0,0]<5>()()
[420][1,0]<4>(0)()
[103][0,1]<5>()("If there's a numeric part, add 2.5-character space before calculating.")
[121][4,0]<5>(1600012,1600036,0,0)()
[121][4,0]<5>(1600012,1600088,2,8704)()
[121][4,0]<5>(1600012,1600088,2,12800)()
[0][0,0]<5>()()
[499][0,0]<4>()()
[103][0,1]<4>()("If it exceeds the cursor width, reduce the horizontal zoom level.")
[111][4,0]<4>(17,1600011,1600012,0)()
[401][1,0]<4>(1)()
[121][4,0]<5>(1600012,100,0,768)()
[121][4,0]<5>(1600049,1600012,1600011,12288)()
[103][0,1]<5>()("Add shift amount.")
[121][4,0]<5>(1600012,10000,1600049,12288)()
[121][4,0]<5>(1600012,1600047,0,768)()
[121][4,0]<5>(1600012,100,0,1024)()
[0][0,0]<5>()()
[420][1,0]<4>(0)()
[103][0,1]<5>()("If the cursor width is normal, store it here.")
[121][4,0]<5>(1600012,1600047,0,0)()
[0][0,0]<5>()()
[499][0,0]<4>()()
[103][0,1]<4>()("Set the item color here.")
[103][0,1]<4>()("If selectable, white. If not selectable, dark blue.")
[121][5,0]<4>(1600053,100,0,65536,2)()
[250][5,4]<4>(19,1600043,0,331776,1600010)("","Universal Window Items","","Selectable? [1:Yes]")
[111][4,0]<4>(1,1600010,0,2)()
[401][1,0]<4>(1)()
[121][4,0]<5>(1600053,50,0,0)()
[121][4,0]<5>(1600054,50,0,0)()
[121][4,0]<5>(1600055,70,0,0)()
[0][0,0]<5>()()
[499][0,0]<4>()()
[103][0,1]<4>()("Using \ax[] and \ay[], put both the item name and the number in one picture.")
[111][4,0]<4>(17,1600003,0,2)()
[401][1,0]<4>(1)()
[103][0,1]<5>()("If the window is displayed instantly without animation, the item starts with opacity 255.")
[121][4,0]<5>(1600057,255,0,0)()
[0][0,0]<5>()()
[420][1,0]<4>(0)()
[121][4,0]<5>(1600057,0,0,0)()
[0][0,0]<5>()()
[499][0,0]<4>()()
[111][4,0]<4>(1,1600060,0,2)()
[401][1,0]<4>(1)()
[122][2,1]<5>(1600007,0)("<C>\cself[7]")
[0][0,0]<5>()()
[499][0,0]<4>()()
[150][19,1]<4>(3145760,1600021,0,1,1,1,1600057,1600041,1600048,1600049,0,0,33554432,0,0,1600053,1600054,1600055,100)("\f[\cself[19]]\cself[7]<\n>\ax[\cself[12]]<\n><R>\ay[0]\cself[6]")
[0][0,0]<4>()()
[498][0,0]<3>()()
[0][0,0]<3>()()
[499][0,0]<2>()()
[103][0,1]<2>()("Picture movement due to scrolling is processed here (required after display).")
[111][4,0]<2>(17,1600029,1,2)()
[401][1,0]<2>(1)()
[103][0,1]<3>()("Animation when updating all items is executed here.")
[150][14,0]<3>(4198145,1600021,5,0,0,-1000000,255,1600041,1600042,-1000000,-1000000,0,16777216,3)()
[0][0,0]<3>()()
[420][1,0]<2>(0)()
[103][0,1]<3>()("If there's scroll movement, move or erase the picture.")
[111][7,0]<3>(2,1600045,-1,3,1600045,1,1)()
[401][1,0]<3>(1)()
[103][0,1]<4>()("If scrolled up, only the bottom scrolled-out row is erased.")
[121][4,0]<4>(1600010,1600027,1600026,8192)()
[121][4,0]<4>(1600010,1600044,1600026,8448)()
[111][4,0]<4>(17,1600043,1600010,1)()
[401][1,0]<4>(1)()
[103][0,1]<5>()("Erase while moving.")
[150][13,0]<5>(4198145,1600021,5,0,0,-1000000,0,1600041,1600042,-1000000,-1000000,0,16777216)()
[150][14,0]<5>(4198145,1600021,5,0,0,-1000000,0,1600041,1600042,-1000000,-1000000,0,16777216,3)()
[150][4,0]<5>(3842,1600021,0,8)()
[0][0,0]<5>()()
[420][1,0]<4>(0)()
[103][0,1]<5>()("If not scrolled out, only move.")
[150][13,0]<5>(4198145,1600021,5,0,0,-1000000,255,1600041,1600042,-1000000,-1000000,0,16777216)()
[150][14,0]<5>(4198145,1600021,5,0,0,-1000000,255,1600041,1600042,-1000000,-1000000,0,16777216,3)()
[0][0,0]<5>()()
[499][0,0]<4>()()
[0][0,0]<4>()()
[401][1,0]<3>(2)()
[103][0,1]<4>()("If scrolled down, only the top scrolled-out row is erased.")
[121][4,0]<4>(1600010,1600044,1600026,8192)()
[111][4,0]<4>(17,1600043,1600010,4)()
[401][1,0]<4>(1)()
[103][0,1]<5>()("Erase while moving.")
[150][13,0]<5>(4198145,1600021,5,0,0,-1000000,0,1600041,1600042,-1000000,-1000000,0,16777216)()
[150][14,0]<5>(4198145,1600021,5,0,0,-1000000,0,1600041,1600042,-1000000,-1000000,0,16777216,3)()
[150][4,0]<5>(3842,1600021,0,8)()
[0][0,0]<5>()()
[420][1,0]<4>(0)()
[103][0,1]<5>()("If not scrolled out, only move.")
[150][13,0]<5>(4198145,1600021,5,0,0,-1000000,255,1600041,1600042,-1000000,-1000000,0,16777216)()
[150][14,0]<5>(4198145,1600021,5,0,0,-1000000,255,1600041,1600042,-1000000,-1000000,0,16777216,3)()
[0][0,0]<5>()()
[499][0,0]<4>()()
[0][0,0]<4>()()
[499][0,0]<3>()()
[0][0,0]<3>()()
[499][0,0]<2>()()
[121][4,0]<2>(1600043,1,0,256)()
[0][0,0]<2>()()
[498][0,0]<1>()()
[179][1,0]<1>(1)()
[103][0,1]<2>()("Display description text. (Only if it was in display mode.)")
[111][4,0]<2>(1,1600001,0,1)()
[401][1,0]<2>(1)()
[103][0,1]<3>()("Check whether the picture for the description text is already displayed.")
[121][4,0]<3>(1600021,1600020,2,0)()
[124][4,0]<3>(1600010,16384,1600021,9)()
[111][4,0]<3>(1,1600010,1,2)()
[401][1,0]<3>(1)()
[250][5,4]<4>(19,1600001,0,331776,1600005)("","Universal Window Items","","Description")
[150][2,0]<4>(67,1600021)()
[150][13,1]<4>(4267808,1600021,0,1,1,-1000000,-1000000,0,0,-1000000,-1000000,0,16777216)("\f[\cself[18]]\space[0]<C>\cself[5]")
[0][0,0]<4>()()
[499][0,0]<3>()()
[0][0,0]<3>()()
[499][0,0]<2>()()
[0][0,0]<2>()()
[498][0,0]<1>()()
[179][1,0]<1>(1)()
[103][0,1]<2>()("Display up and down arrows.")
[179][1,0]<2>(1)()
[103][0,1]<3>()("If there are unseen items above, display an arrow at the top.")
[250][5,4]<3>(18,15,0,69632,1600044)("","Base System Variables","","")
[121][4,0]<3>(1600021,1600020,4,0)()
[150][2,0]<3>(67,1600021)()
[111][4,0]<3>(17,1600044,1,1)()
[401][1,0]<3>(1)()
[121][4,0]<4>(1600050,1600022,0,0)()
[121][4,0]<4>(1600050,1600024,2,12544)()
[121][4,0]<4>(1600051,1600023,0,0)()
[150][11,1]<4>(4128,1600021,0,1,1,1,255,1600050,1600051,100,0)("\f[\cself[18]]\E▲")
[0][0,0]<4>()()
[420][1,0]<3>(0)()
[150][3,0]<4>(4130,1600021,0)()
[0][0,0]<4>()()
[499][0,0]<3>()()
[0][0,0]<3>()()
[498][0,0]<2>()()
[179][1,0]<2>(1)()
[103][0,1]<3>()("If not all items can be displayed, display an arrow at the bottom.")
[250][5,4]<3>(18,17,0,69632,1600040)("","Base System Variables","","")
[121][4,0]<3>(1600010,1600040,1600026,12288)()
[121][4,0]<3>(1600010,1600027,0,512)()
[121][4,0]<3>(1600021,1600020,5,0)()
[150][2,0]<3>(67,1600021)()
[111][4,0]<3>(17,1600044,1600010,4)()
[401][1,0]<3>(1)()
[121][4,0]<4>(1600050,1600022,0,0)()
[121][4,0]<4>(1600050,1600024,2,12544)()
[121][4,0]<4>(1600051,1600023,0,0)()
[121][4,0]<4>(1600051,1600025,0,256)()
[150][11,1]<4>(4128,1600021,0,1,1,1,255,1600050,1600051,100,0)("\f[\cself[18]]\E▼")
[0][0,0]<4>()()
[420][1,0]<3>(0)()
[150][3,0]<4>(4130,1600021,0)()
[0][0,0]<4>()()
[499][0,0]<3>()()
[0][0,0]<3>()()
[498][0,0]<2>()()
[179][1,0]<2>(1)()
[103][0,1]<3>()("Add a scroll bar.")
[250][5,4]<3>(18,17,0,69632,1600040)("","Base System Variables","","")
[103][0,1]<3>()("CSelf10 is the total row count.")
[121][4,0]<3>(1600010,1600040,1600026,12288)()
[121][4,0]<3>(1600011,1600040,1600026,16384)()
[111][4,0]<3>(1,1600011,1,1)()
[401][1,0]<3>(1)()
[103][0,1]<4>()("If there's even one item in the last row, add 1 to the row count.")
[121][4,0]<4>(1600010,1,0,256)()
[0][0,0]<4>()()
[499][0,0]<3>()()
[121][4,0]<3>(1600021,1600020,6,0)()
[150][2,0]<3>(67,1600021)()
[111][4,0]<3>(17,1600061,1,2)()
[401][1,0]<3>(1)()
[111][4,0]<4>(17,1600010,1600027,3)()
[401][1,0]<4>(1)()
[150][3,0]<5>(4130,1600021,0)()
[0][0,0]<5>()()
[420][1,0]<4>(0)()
[103][0,1]<5>()("Calculate the percentage of the total height that is currently visible, and calculate the scroll bar length.")
[121][4,0]<5>(1600011,1600027,100,8192)()
[121][4,0]<5>(1600011,1600010,0,1024)()
[121][4,0]<5>(1600011,1600025,1600011,8192)()
[121][4,0]<5>(1600011,100,0,1024)()
[103][0,1]<5>()("CSelf14 is the margin above and below the scroll bar.")
[121][4,0]<5>(1600014,1600089,0,0)()
[103][0,1]<5>()("Calculate where the scroll bar is now.")
[121][4,0]<5>(1600012,1600025,1600011,4096)()
[121][4,0]<5>(1600012,1600014,1,512)()
[121][4,0]<5>(1600012,1600044,0,768)()
[121][4,0]<5>(1600012,1600010,1600027,5120)()
[121][4,0]<5>(1600012,1600023,0,256)()
[121][4,0]<5>(1600012,1600014,2,12544)()
[103][0,1]<5>()("Calculate X position.")
[121][4,0]<5>(1600013,1600022,1600024,0)()
[121][4,0]<5>(1600013,6,0,512)()
[150][12,0]<5>(320,1600021,0,5,1600011,1,255,1600013,1600012,100,0,1600009)()
[0][0,0]<5>()()
[499][0,0]<4>()()
[0][0,0]<4>()()
[420][1,0]<3>(0)()
[103][0,1]<4>()("If no scroll bar, erase it here.")
[150][3,0]<4>(4130,1600021,0)()
[0][0,0]<4>()()
[499][0,0]<3>()()
[0][0,0]<3>()()
[498][0,0]<2>()()
[0][0,0]<2>()()
[498][0,0]<1>()()
[103][0,1]<1>()(" ")
[172][0,0]<1>()()
[0][0,0]<1>()()
[499][0,0]<0>()()
[0][0,0]<0>()()
WoditorEvCOMMAND_END
--
[COMMAND_TEXT_START]
▼ ―――――――――――――――――――――――――――――――――――
▼ [Process Overview]
▼   This common event is called after executing the "Create [type] List" event,
▼   and it displays a screen listing items, equipment, etc. stored in the Variable DB.
▼  
▼   In Variable DB "Base System Variables," you can set the window position, size, rows, and columns.
▼   If they are all 0, a full-screen window with 2 columns and 10 rows will be displayed.
▼   (* If the Rows setting is 2 or lower, the behavior will be abnormal.)
▼  
▼   When the Universal Window is erased, the aforementioned settings are reset to 0,
▼   so you must set them again every time you use it.
▼  
▼   Also, you can't use more than one Universal Window at a time.
▼ ―――――――――――――――――――――――――――――――――――
▼ [Databases Accessed by This Common Event]
▼   Variable DB "Universal Window Items"
▼   Variable DB "Base System Variables"
▼  
▼ [Other Common Events Called from Here]
▼   None
▼  
▼ [Pictures]
▼   Base Picture ID + 0 = Main Window
▼   Base Picture ID + 1 = Description Window
▼   Base Picture ID + 2 = Description Text
▼   Base Picture ID + 3 = Cursor
▼   Base Picture ID + 4 = Up Arrow
▼   Base Picture ID + 5 = Down Arrow
▼   Base Picture ID + 6 = Scroll Bar
▼  
▼   Base Picture ID + 9-209 = Items (1 picture each item)
▼ [Usage Example]
▼   There are examples in the common event "■■[Common: Screen Processing]■■".
▼ ―――――――――――――――――――――――――――――――――――
▼ ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
▼   Set Parameters
▼ ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
▼ Set a fixed value.
■Set Variable: CSelf20[Base Picture ID] = 15000 + 0 
▼ Load base parameters.
■Load DB(Var):  CSelf18[Small Font Size] = VarDB[ "Base System Variables":6:0 ] (18:System Small Font Size:Number) 
■Load DB(Var):  CSelf19[Base Font Size] = VarDB[ "Base System Variables":5:0 ] (18:System Base Font Size:Number) 
■Load DB(User):  CSelf8[Window Image File] = UserDB[ "Images/Sounds":0:"Window Image File" ] (16:Basic Images/Sounds:0) 
■Load DB(User):  CSelf9[Cursor Image File] = UserDB[ "Images/Sounds":0:"Cursor Image File" ] (16:Basic Images/Sounds:1) 
▼ Ver.2.20  Separated the coordinate scale into vertical and horizontal scales.
■Load DB(Var):  CSelf88[Coordinate Scale X [x10]] = VarDB[ "Base System Variables":97:0 ] (18:Coordinate Scale X [x10]:Number) 
■Load DB(Var):  CSelf89[Coordinate Scale Y [x10]] = VarDB[ "Base System Variables":98:0 ] (18:Coordinate Scale Y [x10]:Number) 
■Set Variable: CSelf29[Update-All Flag] = 0 + 0 
■Set Variable: CSelf63[Window Opacity] = 255 + 0 
▼ Initialize.
■Set Variable: CSelf29[Update-All Flag] = 0 + 0 
■Set Variable: CSelf64[Item Fast Display] = 0 + 0 
■Condition (Number):   [1] CSelf0[Mode] ==  0  /  [2] CSelf0[Mode] ==  2  
-◇Condition:  [1]  [ CSelf0[Mode] == 0   ] Case↓
 |▼ Normal mode.
 |■Set Variable: CSelf60[Item Left-Align Flag (Off = Center)] = 1 + 0 
 |■Set Variable: CSelf61[Scroll Bar Display Flag] = 1 + 0 
 |■
-◇Condition:  [2]  [ CSelf0[Mode] == 2   ] Case↓
 |▼ For battle commands.
 |■Set Variable: CSelf60[Item Left-Align Flag (Off = Center)] = 0 + 0 
 |■Set Variable: CSelf61[Scroll Bar Display Flag] = 0 + 0 
 |■Set Variable: CSelf0[Mode] = 0 + 0 
 |■Set Variable: CSelf63[Window Opacity] = 180 + 0 
 |■Set Variable: CSelf64[Item Fast Display] = 1 + 0 
 |■
◇End◇
▼ ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
▼   Main Processing Starts Here
▼ ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
■Condition (Number):   [1] CSelf0[Mode] ==  -1  
-◇Condition:  [1]  [ CSelf0[Mode] == -1   ] Case↓
 |▼ ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 |▼ When in "Erase" Mode
 |▼ ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 |■Set Variable: CSelf60[Item Left-Align Flag (Off = Center)] = 1 + 0 
 |■Set Variable: CSelf61[Scroll Bar Display Flag] = 1 + 0 
 |▼ Erase cursor.
 |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 3 
 |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 |■Picture Erase: CSelf21[Temp Picture ID]  / 0(0) Frames
 |▼ Erase everything else.
 |■Set Variable: CSelf10[Temp Variable A] = CSelf20[Base Picture ID] + 999 
 |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 0 
 |■Picture [Reset Delay]: CSelf20[Base Picture ID] to CSelf10[Temp Variable A] 
 |■Condition (Number):   [1] CSelf3[[Disp] Animation] >=  1  
 |-◇Condition:  [1]  [ CSelf3[[Disp] Animation] >= 1   ] Case↓
 | |▼ If animation is specified, erase the main window accordingly.
 | |■Picture Erase: CSelf20[Base Picture ID] to CSelf10[Temp Variable A]  / 3(1) Frames
 | |■Condition (Number):   [1] CSelf3[[Disp] Animation] <=  4  /  [2] CSelf3[[Disp] Animation] >=  5  
 | |-◇Condition:  [1]  [ CSelf3[[Disp] Animation] <= 4   ] Case↓
 | | |▼ Set the zoom level to 0%, then erase.
 | | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(0) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom 0% / Color Same
 | | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 4(2) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom 0% / Color Same
 | | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 4(4) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom 0% / Color Same
 | | |■
 | |-◇Condition:  [2]  [ CSelf3[[Disp] Animation] >= 5   ] Case↓
 | | |▼ Shrink up or down, then end.
 | | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(0) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom 100x0% / Color Same
 | | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 4(2) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom 100x0% / Color Same
 | | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 4(4) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom 100x0% / Color Same
 | | |■
 | |◇End◇
 | |■Picture Erase: CSelf21[Temp Picture ID]  / 0(8) Frames
 | |■Wait: 7 Frames
 | |■
 |-◇Else
 | |■Picture Erase: CSelf20[Base Picture ID] to CSelf10[Temp Variable A]  / 0(0) Frames
 | |■
 |◇End◇
 |■Exit Event
 |■
◇End◇
■Condition (Number):   [1] CSelf0[Mode] ==  0  
-◇Condition:  [1]  [ CSelf0[Mode] == 0   ] Case↓
 |▼ ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 |▼ When in "Display" Mode
 |▼ ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 |■Repeat Loop [ 1 ] Times
 | |▼ Get window size and more from Base System Variables.
 | |■Load DB(Var):  CSelf22[Display X] = VarDB[ "Base System Variables":9:0 ] (18:Universal Window Display X:Number) 
 | |■Load DB(Var):  CSelf23[Display Y] = VarDB[ "Base System Variables":10:0 ] (18:Universal Window Display Y:Number) 
 | |■Load DB(Var):  CSelf24[Width] = VarDB[ "Base System Variables":11:0 ] (18:Universal Window Width:Number) 
 | |■Load DB(Var):  CSelf25[Height] = VarDB[ "Base System Variables":12:0 ] (18:Universal Window Height:Number) 
 | |■Load DB(Var):  CSelf26[Columns] = VarDB[ "Base System Variables":13:0 ] (18:Universal Window Columns:Number) 
 | |■Load DB(Var):  CSelf27[Rows] = VarDB[ "Base System Variables":14:0 ] (18:Universal Window Rows:Number) 
 | |▼  
 | |▼ The description window height can be specified externally.
 | |■Load DB(Var):  CSelf33[Description Window Height] = VarDB[ "Base System Variables":16:0 ] (18:Universal Window Description Height:Number) 
 | |▼ If the value is 0, use the default value.
 | |■Condition (Number):   [1] CSelf24[Width] ==  0  
 | |-◇Condition:  [1]  [ CSelf24[Width] == 0   ] Case↓
 | | |■Set Variable: CSelf24[Width] = 32 * CSelf88[Coordinate Scale X [x10]] 
 | | |■
 | |◇End◇
 | |■Condition (Number):   [1] CSelf25[Height] ==  0  
 | |-◇Condition:  [1]  [ CSelf25[Height] == 0   ] Case↓
 | | |■Set Variable: CSelf25[Height] = 24 * CSelf89[Coordinate Scale Y [x10]] 
 | | |■
 | |◇End◇
 | |■Condition (Number):   [1] CSelf26[Columns] ==  0  
 | |-◇Condition:  [1]  [ CSelf26[Columns] == 0   ] Case↓
 | | |■Set Variable: CSelf26[Columns] = 2 + 0 
 | | |■
 | |◇End◇
 | |■Condition (Number):   [1] CSelf27[Rows] ==  0  
 | |-◇Condition:  [1]  [ CSelf27[Rows] == 0   ] Case↓
 | | |■Set Variable: CSelf27[Rows] = 14 + 0 
 | | |■
 | |◇End◇
 | |■Condition (Number):   [1] CSelf33[Description Window Height] ==  0  
 | |-◇Condition:  [1]  [ CSelf33[Description Window Height] == 0   ] Case↓
 | | |■Set Variable: CSelf33[Description Window Height] = 2 * CSelf88[Coordinate Scale X [x10]] 
 | | |■
 | |◇End◇
 | |■
 |◇Loop End Point◇◇
 |■Repeat Loop [ 1 ] Times
 | |▼ Display description, and adjust main window.
 | |▼ Picture ID is "Base Picture ID + 1."
 | |■Condition (Number):   [1] CSelf2[[Disp] Description] ==  0  /  [2] CSelf2[[Disp] Description] ==  1  /  [3] CSelf2[[Disp] Description] ==  2  
 | |-◇Condition:  [1]  [ CSelf2[[Disp] Description] == 0   ] Case↓
 | | |▼ Don't display (erase) description.
 | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 1 
 | | |■Picture Erase: CSelf21[Temp Picture ID]  / 0(0) Frames
 | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 2 
 | | |■Picture Erase: CSelf21[Temp Picture ID]  / 0(0) Frames
 | | |■
 | |-◇Condition:  [2]  [ CSelf2[[Disp] Description] == 1   ] Case↓
 | | |▼ Display description at top with full width.
 | | |▼ Calculate position and size.
 | | |■Set Variable: CSelf30[Description Window X] = 0 + 0 
 | | |■Set Variable: CSelf31[Description Window Y] = 0 + 0 
 | | |■Set Variable: CSelf32[Description Window Width] = 32 * CSelf88[Coordinate Scale X [x10]] 
 | | |▼ Display description window.
 | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 1 
 | | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | | |■Picture Show: CSelf21[Temp Picture ID] [Top-Left] Window (CSelf8[Window Image File]) Size [CSelf32[Description Window Width],CSelf33[Description Window Height]] X:CSelf30[Description Window X] Y:CSelf31[Description Window Y] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | | |▼ Display empty description text.
 | | |■Set Variable: CSelf10[Temp Variable A] = CSelf30[Description Window X] + 0 
 | | |■Set Variable: CSelf10[Temp Variable A] += CSelf32[Description Window Width] / 2 
 | | |■Set Variable: CSelf11[Temp Variable B] = CSelf31[Description Window Y] + 0 
 | | |■Set Variable: CSelf11[Temp Variable B] += CSelf33[Description Window Height] / 2 
 | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 2 
 | | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | | |■Picture Show: CSelf21[Temp Picture ID] [Center] String [\f[\cself[18]]\s] X:CSelf10[Temp Variable A] Y:CSelf11[Temp Variable B] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | | |▼ If it affects the main window, adjust size.
 | | |■Set Variable: CSelf10[Temp Variable A] = CSelf31[Description Window Y] + CSelf33[Description Window Height] 
 | | |■Set Variable: CSelf10[Temp Variable A] -= CSelf23[Display Y] + 0 
 | | |■Set Variable: CSelf10[Temp Variable A] Lower Bound= 0 + 0 
 | | |■Set Variable: CSelf23[Display Y] += CSelf10[Temp Variable A] + 0 
 | | |■
 | |-◇Condition:  [3]  [ CSelf2[[Disp] Description] == 2   ] Case↓
 | | |▼ Display description at bottom with full width.
 | | |▼ Calculate position and size.
 | | |■Set Variable: CSelf30[Description Window X] = 0 + 0 
 | | |■Set Variable: CSelf31[Description Window Y] = 24 * CSelf89[Coordinate Scale Y [x10]] 
 | | |■Set Variable: CSelf31[Description Window Y] -= CSelf33[Description Window Height] + 0 
 | | |■Set Variable: CSelf32[Description Window Width] = 32 * CSelf88[Coordinate Scale X [x10]] 
 | | |▼ Display description window.
 | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 1 
 | | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | | |■Picture Show: CSelf21[Temp Picture ID] [Top-Left] Window (CSelf8[Window Image File]) Size [CSelf32[Description Window Width],CSelf33[Description Window Height]] X:CSelf30[Description Window X] Y:CSelf31[Description Window Y] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | | |▼ Display empty description text.
 | | |■Set Variable: CSelf10[Temp Variable A] = CSelf30[Description Window X] + 0 
 | | |■Set Variable: CSelf10[Temp Variable A] += CSelf32[Description Window Width] / 2 
 | | |■Set Variable: CSelf11[Temp Variable B] = CSelf31[Description Window Y] + 0 
 | | |■Set Variable: CSelf11[Temp Variable B] += CSelf33[Description Window Height] / 2 
 | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 2 
 | | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | | |■Picture Show: CSelf21[Temp Picture ID] [Center] String [\f[\cself[18]]\s] X:CSelf10[Temp Variable A] Y:CSelf11[Temp Variable B] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | | |▼ If it affects the main window, adjust size.
 | | |■Set Variable: CSelf10[Temp Variable A] = CSelf23[Display Y] + CSelf25[Height] 
 | | |■Set Variable: CSelf10[Temp Variable A] -= CSelf31[Description Window Y] + 0 
 | | |■Set Variable: CSelf10[Temp Variable A] Lower Bound= 0 + 0 
 | | |■Set Variable: CSelf25[Height] -= CSelf10[Temp Variable A] + 0 
 | | |■
 | |-◇Else
 | | |■Condition (Number):   [1] CSelf2[[Disp] Description] ==  3  /  [2] CSelf2[[Disp] Description] ==  4  
 | | |-◇Condition:  [1]  [ CSelf2[[Disp] Description] == 3   ] Case↓
 | | | |▼ Display description above window.
 | | | |▼ Calculate position and size.
 | | | |■Set Variable: CSelf30[Description Window X] = CSelf22[Display X] + 0 
 | | | |■Set Variable: CSelf31[Description Window Y] = CSelf23[Display Y] + 0 
 | | | |■Set Variable: CSelf31[Description Window Y] -= CSelf33[Description Window Height] + 0 
 | | | |■Set Variable: CSelf32[Description Window Width] = CSelf24[Width] + 0 
 | | | |▼ Display description window.
 | | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 1 
 | | | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | | | |■Picture Show: CSelf21[Temp Picture ID] [Top-Left] Window (CSelf8[Window Image File]) Size [CSelf32[Description Window Width],CSelf33[Description Window Height]] X:CSelf30[Description Window X] Y:CSelf31[Description Window Y] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | | | |▼ Display empty description text.
 | | | |■Set Variable: CSelf10[Temp Variable A] = CSelf30[Description Window X] + 0 
 | | | |■Set Variable: CSelf10[Temp Variable A] += CSelf32[Description Window Width] / 2 
 | | | |■Set Variable: CSelf11[Temp Variable B] = CSelf31[Description Window Y] + 0 
 | | | |■Set Variable: CSelf11[Temp Variable B] += CSelf33[Description Window Height] / 2 
 | | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 2 
 | | | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | | | |■Picture Show: CSelf21[Temp Picture ID] [Center] String [\f[\cself[18]]\s] X:CSelf10[Temp Variable A] Y:CSelf11[Temp Variable B] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | | | |■
 | | |-◇Condition:  [2]  [ CSelf2[[Disp] Description] == 4   ] Case↓
 | | | |▼ Display description below window.
 | | | |▼ Calculate position and size.
 | | | |■Set Variable: CSelf30[Description Window X] = CSelf22[Display X] + 0 
 | | | |■Set Variable: CSelf31[Description Window Y] = CSelf23[Display Y] + CSelf25[Height] 
 | | | |■Set Variable: CSelf32[Description Window Width] = CSelf24[Width] + 0 
 | | | |▼ Display description window.
 | | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 1 
 | | | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | | | |■Picture Show: CSelf21[Temp Picture ID] [Top-Left] Window (CSelf8[Window Image File]) Size [CSelf32[Description Window Width],CSelf33[Description Window Height]] X:CSelf30[Description Window X] Y:CSelf31[Description Window Y] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | | | |▼ Display empty description text.
 | | | |■Set Variable: CSelf10[Temp Variable A] = CSelf30[Description Window X] + 0 
 | | | |■Set Variable: CSelf10[Temp Variable A] += CSelf32[Description Window Width] / 2 
 | | | |■Set Variable: CSelf11[Temp Variable B] = CSelf31[Description Window Y] + 0 
 | | | |■Set Variable: CSelf11[Temp Variable B] += CSelf33[Description Window Height] / 2 
 | | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 2 
 | | | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | | | |■Picture Show: CSelf21[Temp Picture ID] [Center] String [\f[\cself[18]]\s] X:CSelf10[Temp Variable A] Y:CSelf11[Temp Variable B] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | | | |■
 | | |◇End◇
 | | |■
 | |◇End◇
 | |■
 |◇Loop End Point◇◇
 |▼ 1. Display main window.
 |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 0 
 |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 |■Picture Show: CSelf21[Temp Picture ID] [Top-Left] Window (CSelf8[Window Image File]) Size [CSelf24[Width],CSelf25[Height]] X:CSelf22[Display X] Y:CSelf23[Display Y] / 0(0) Frames  / Pattern 1 / Opacity CSelf63[Window Opacity] / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 |■Condition (Number):   [1] CSelf3[[Disp] Animation] ==  1  /  [2] CSelf3[[Disp] Animation] ==  2  /  [3] CSelf3[[Disp] Animation] ==  3  
 |-◇Condition:  [1]  [ CSelf3[[Disp] Animation] == 1   ] Case↓
 | |▼ Slide in from the top-left.
 | |■Set Variable: CSelf41[Temp Item Display X] = CSelf22[Display X] + 0 
 | |■Set Variable: CSelf42[Temp Item Display Y] = CSelf23[Display Y] + 0 
 | |■Picture Show: CSelf21[Temp Picture ID] [Top-Left] Window (CSelf8[Window Image File]) Size [CSelf24[Width],CSelf25[Height]] X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 0(0) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom 0% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(0) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(3) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(5) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100% / Color Same
 | |■
 |-◇Condition:  [2]  [ CSelf3[[Disp] Animation] == 2   ] Case↓
 | |▼ Slide in from the bottom-left.
 | |■Set Variable: CSelf41[Temp Item Display X] = CSelf22[Display X] + 0 
 | |■Set Variable: CSelf42[Temp Item Display Y] = CSelf23[Display Y] + CSelf25[Height] 
 | |■Picture Show: CSelf21[Temp Picture ID] [Bottom-Left] Window (CSelf8[Window Image File]) Size [CSelf24[Width],CSelf25[Height]] X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 0(0) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom 0% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(0) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(3) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(5) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100% / Color Same
 | |■
 |-◇Condition:  [3]  [ CSelf3[[Disp] Animation] == 3   ] Case↓
 | |▼ Slide in from the top-right.
 | |■Set Variable: CSelf41[Temp Item Display X] = CSelf22[Display X] + CSelf24[Width] 
 | |■Set Variable: CSelf42[Temp Item Display Y] = CSelf23[Display Y] + 0 
 | |■Picture Show: CSelf21[Temp Picture ID] [Top-Right] Window (CSelf8[Window Image File]) Size [CSelf24[Width],CSelf25[Height]] X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 0(0) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom 0% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(0) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(3) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(5) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100% / Color Same
 | |■
 |◇End◇
 |■Condition (Number):   [1] CSelf3[[Disp] Animation] ==  4  /  [2] CSelf3[[Disp] Animation] ==  5  /  [3] CSelf3[[Disp] Animation] ==  6  
 |-◇Condition:  [1]  [ CSelf3[[Disp] Animation] == 4   ] Case↓
 | |▼ Slide in from the bottom-right.
 | |■Set Variable: CSelf41[Temp Item Display X] = CSelf22[Display X] + CSelf24[Width] 
 | |■Set Variable: CSelf42[Temp Item Display Y] = CSelf23[Display Y] + CSelf25[Height] 
 | |■Picture Show: CSelf21[Temp Picture ID] [Bottom-Right] Window (CSelf8[Window Image File]) Size [CSelf24[Width],CSelf25[Height]] X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 0(0) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom 0% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(0) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(3) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(5) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100% / Color Same
 | |■
 |-◇Condition:  [2]  [ CSelf3[[Disp] Animation] == 5   ] Case↓
 | |▼ Slide in from the top-center.
 | |■Set Variable: CSelf41[Temp Item Display X] = CSelf22[Display X] + 0 
 | |■Set Variable: CSelf42[Temp Item Display Y] = CSelf23[Display Y] + 0 
 | |■Picture Show: CSelf21[Temp Picture ID] [Top-Left] Window (CSelf8[Window Image File]) Size [CSelf24[Width],CSelf25[Height]] X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 0(0) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom 100x0% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(0) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100x100% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(3) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100x100% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(5) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100x100% / Color Same
 | |■
 |-◇Condition:  [3]  [ CSelf3[[Disp] Animation] == 6   ] Case↓
 | |▼ Slide in from the bottom-center.
 | |■Set Variable: CSelf41[Temp Item Display X] = CSelf22[Display X] + 0 
 | |■Set Variable: CSelf42[Temp Item Display Y] = CSelf23[Display Y] + CSelf25[Height] 
 | |■Picture Show: CSelf21[Temp Picture ID] [Bottom-Left] Window (CSelf8[Window Image File]) Size [CSelf24[Width],CSelf25[Height]] X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 0(0) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom 100x0% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(0) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100x100% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(3) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100x100% / Color Same
 | |■Picture Move: CSelf21[Temp Picture ID]  Relative X:0 Y:0 / 5(5) Frames  / Pattern Same / Opacity CSelf63[Window Opacity] / Blend Mode: Same   / Angle Same / Zoom 100x100% / Color Same
 | |■
 |◇End◇
 |▼ If there's animation, wait until it's displayed.
 |■Condition (Number):   [1] CSelf64[Item Fast Display] ==  0  
 |-◇Condition:  [1]  [ CSelf64[Item Fast Display] == 0   ] Case↓
 | |▼ However, only do this if Fast Display is off.
 | |■Condition (Number):   [1] CSelf3[[Disp] Animation] >=  1  
 | |-◇Condition:  [1]  [ CSelf3[[Disp] Animation] >= 1   ] Case↓
 | | |■Wait: 5 Frames
 | | |■
 | |◇End◇
 | |■
 |◇End◇
 |▼ 2. Set base cursor position.
 |▼   (These cursor position values are used during "update" later in this event.)
 |■Set Variable: CSelf34[[Stored] Cursor Base X] = CSelf22[Display X] + 0 
 |■Set Variable: CSelf34[[Stored] Cursor Base X] += CSelf88[Coordinate Scale X [x10]] * 1 
 |■Set Variable: CSelf35[[Stored] Cursor Base Y] = CSelf23[Display Y] + 0 
 |■Set Variable: CSelf35[[Stored] Cursor Base Y] += CSelf89[Coordinate Scale Y [x10]] / 2 
 |▼ Calculate the cursor movement amount in the vertical and horizontal directions.
 |■Set Variable: CSelf38[[Stored] Cursor Move H Amount] = CSelf24[Width] + 0 
 |■Set Variable: CSelf38[[Stored] Cursor Move H Amount] -= 1 * CSelf88[Coordinate Scale X [x10]] 
 |■Set Variable: CSelf38[[Stored] Cursor Move H Amount] /= CSelf26[Columns] + 0 
 |■Set Variable: CSelf39[[Stored] Cursor Move V Amount] = CSelf25[Height] + 0 
 |■Set Variable: CSelf39[[Stored] Cursor Move V Amount] -= 1 * CSelf89[Coordinate Scale Y [x10]] 
 |■Set Variable: CSelf39[[Stored] Cursor Move V Amount] /= CSelf27[Rows] + 0 
 |▼ Adjust cursor drawing size.
 |■Set Variable: CSelf36[[Stored] Cursor Width] = CSelf38[[Stored] Cursor Move H Amount] + 0 
 |■Set Variable: CSelf36[[Stored] Cursor Width] -= CSelf88[Coordinate Scale X [x10]] + 0 
 |■Set Variable: CSelf37[[Stored] Cursor Height] = CSelf39[[Stored] Cursor Move V Amount] + 0 
 |■Set Variable: CSelf37[[Stored] Cursor Height] Upper Bound= CSelf19[Base Font Size] + 0 
 |▼ Slightly adjust the position based on the movement amount and the cursor height.
 |■Set Variable: CSelf14[Temp Variable E] = CSelf39[[Stored] Cursor Move V Amount] - CSelf37[[Stored] Cursor Height] 
 |■Set Variable: CSelf14[Temp Variable E] /= 2 + 0 
 |■Set Variable: CSelf35[[Stored] Cursor Base Y] += CSelf14[Temp Variable E] + 0 
 |▼ Erase all items.
 |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 9 
 |■Set Variable: CSelf10[Temp Variable A] = CSelf20[Base Picture ID] + 999 
 |■Picture [Reset Delay]: CSelf21[Temp Picture ID] to CSelf10[Temp Variable A] 
 |■Picture Erase: CSelf21[Temp Picture ID] to CSelf10[Temp Variable A]  / 0(0) Frames
 |▼  
 |▼ Continue by executing Mode 1 (Update) to display the items.
 |■Condition (Number):   [1] CSelf1[Cursor Position] ==  -1  
 |-◇Condition:  [1]  [ CSelf1[Cursor Position] == -1   ] Case↓
 | |■Debug Text: Reset.
 | |■Write to DB(Var): VarDB[ "Base System Variables":15:0 ] (18:Universal Window Vert. Scroll Pos:Number) =  0
 | |■
 |◇End◇
 |■Set Variable: CSelf0[Mode] = 1 + 0 
 |■Set Variable: CSelf29[Update-All Flag] = 1 + 0 
 |■
◇End◇
■ Checkpoint ■■■■■■■■■■■■■■■■■■■■■■■■
■Condition (Number):   [1] CSelf0[Mode] ==  1  
-◇Condition:  [1]  [ CSelf0[Mode] == 1   ] Case↓
 |▼ ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 |▼ "Update" Mode
 |▼ ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 |■Repeat Loop [ 1 ] Times
 | |▼ First, if the cursor position exceeds the item count, reduce it.
 | |■Load DB(Var):  CSelf40[Total Items] = VarDB[ "Base System Variables":17:0 ] (18:Universal Window Item Count:Number) 
 | |■Condition (Number):   [1] CSelf1[Cursor Position] >=  1  
 | |-◇Condition:  [1]  [ CSelf1[Cursor Position] >= 1   ] Case↓
 | | |■Set Variable: CSelf1[Cursor Position] Upper Bound= CSelf40[Total Items] - 1 
 | | |■
 | |◇End◇
 | |▼ Recalculate the vertical scroll position here.
 | |■Set Variable: CSelf10[Temp Variable A] = CSelf1[Cursor Position] / CSelf26[Columns] 
 | |■Set Variable: CSelf45[Scroll Change Amount] = 0 + 0 
 | |■Repeat Loop [ 1 ] Times
 | | |■Set Variable: CSelf10[Temp Variable A] = CSelf1[Cursor Position] / CSelf26[Columns] 
 | | |■Load DB(Var):  CSelf11[Temp Variable B] = VarDB[ "Base System Variables":15:0 ] (18:Universal Window Vert. Scroll Pos:Number) 
 | | |■Set Variable: CSelf12[Temp Variable C] = CSelf10[Temp Variable A] - CSelf11[Temp Variable B] 
 | | |■Set Variable: CSelf12[Temp Variable C] += 1 + 0 
 | | |■Repeat Loop [ 0 ] Times
 | | | |■Debug Text: \cself[10] \cself[11] \cself[12] is \cself[27] or higher?
 | | | |■
 | | |◇Loop End Point◇◇
 | | |■Condition (Number):   [1] CSelf12[Temp Variable C] >=  CSelf27[Rows]  
 | | |-◇Condition:  [1]  [ CSelf12[Temp Variable C] >= CSelf27[Rows]   ] Case↓
 | | | |▼ When the cursor is below the currently visible area.
 | | | |▼ However, if the last item is visible, don't move it any further.
 | | | |■Repeat Loop [ 1 ] Times
 | | | | |■Set Variable: CSelf66[Temp Total Items] = CSelf40[Total Items] + 0 
 | | | | |■Set Variable: CSelf66[Temp Total Items] += CSelf26[Columns] + 1 
 | | | | |■Set Variable: CSelf13[Temp Variable D] = CSelf66[Temp Total Items] / CSelf26[Columns] 
 | | | | |■Set Variable: CSelf13[Temp Variable D] = CSelf13[Temp Variable D] - CSelf27[Rows] 
 | | | | |■Condition (Number):   [1] CSelf13[Temp Variable D] >  CSelf11[Temp Variable B]  
 | | | | |-◇Condition:  [1]  [ CSelf13[Temp Variable D] > CSelf11[Temp Variable B]   ] Case↓
 | | | | | |▼ Move scroll position down.
 | | | | | |■Set Variable: CSelf45[Scroll Change Amount] = CSelf12[Temp Variable C] - CSelf27[Rows] 
 | | | | | |■Write to DB(Var): VarDB[ "Base System Variables":15:0 ] (18:Universal Window Vert. Scroll Pos:Number) +=  CSelf45[Scroll Change Amount]
 | | | | | |■Repeat Loop [ 0 ] Times
 | | | | | | |■Debug Text: + Change \cself[45] Scroll \cdb[18:15:0]
 | | | | | | |■
 | | | | | |◇Loop End Point◇◇
 | | | | | |■
 | | | | |◇End◇
 | | | | |■
 | | | |◇Loop End Point◇◇
 | | | |■
 | | |◇End◇
 | | |■
 | |◇Loop End Point◇◇
 | |■Condition (Number):   [1] CSelf45[Scroll Change Amount] ==  0  
 | |-◇Condition:  [1]  [ CSelf45[Scroll Change Amount] == 0   ] Case↓
 | | |■Repeat Loop [ 1 ] Times
 | | | |■Load DB(Var):  CSelf11[Temp Variable B] = VarDB[ "Base System Variables":15:0 ] (18:Universal Window Vert. Scroll Pos:Number) 
 | | | |■Set Variable: CSelf10[Temp Variable A] = CSelf1[Cursor Position] / CSelf26[Columns] 
 | | | |■Set Variable: CSelf12[Temp Variable C] = CSelf10[Temp Variable A] - CSelf11[Temp Variable B] 
 | | | |■Repeat Loop [ 0 ] Times
 | | | | |■Debug Text: \cself[10] \cself[11] \cself[12] is less than 0?
 | | | | |■
 | | | |◇Loop End Point◇◇
 | | | |■Set Variable: CSelf12[Temp Variable C] -= 1 + 0 
 | | | |■Condition (Number):   [1] CSelf12[Temp Variable C] <  0  
 | | | |-◇Condition:  [1]  [ CSelf12[Temp Variable C] < 0   ] Case↓
 | | | | |▼ When the cursor is above the currently visible area.
 | | | | |▼ Move scroll position up.
 | | | | |▼ However, if the fist item is visible, don't move it any further.
 | | | | |■Condition (Number):   [1] CSelf11[Temp Variable B] >=  1  
 | | | | |-◇Condition:  [1]  [ CSelf11[Temp Variable B] >= 1   ] Case↓
 | | | | | |■Set Variable: CSelf45[Scroll Change Amount] = CSelf12[Temp Variable C] + 0 
 | | | | | |■Write to DB(Var): VarDB[ "Base System Variables":15:0 ] (18:Universal Window Vert. Scroll Pos:Number) +=  CSelf12[Temp Variable C]
 | | | | | |■Write to DB(Var): VarDB[ "Base System Variables":15:0 ] (18:Universal Window Vert. Scroll Pos:Number) Lower Bound  0
 | | | | | |■Repeat Loop [ 0 ] Times
 | | | | | | |■Debug Text: - Change \cself[45] Scroll \cdb[18:15:0]
 | | | | | | |■
 | | | | | |◇Loop End Point◇◇
 | | | | | |■
 | | | | |◇End◇
 | | | | |■
 | | | |-◇Else
 | | | | |■
 | | | |◇End◇
 | | | |■
 | | |◇Loop End Point◇◇
 | | |■
 | |◇End◇
 | |■
 |◇Loop End Point◇◇
 |▼  
 |■Repeat Loop [ 1 ] Times
 | |▼ Calculate cursor position.
 | |■Load DB(Var):  CSelf43[Item Position Being Processed] = VarDB[ "Base System Variables":15:0 ] (18:Universal Window Vert. Scroll Pos:Number) 
 | |■Set Variable: CSelf43[Item Position Being Processed] *= CSelf26[Columns] + 0 
 | |■Set Variable: CSelf43[Item Position Being Processed] = CSelf1[Cursor Position] - CSelf43[Item Position Being Processed] 
 | |▼ Calculate X position.
 | |■Set Variable: CSelf41[Temp Item Display X] = CSelf43[Item Position Being Processed] % CSelf26[Columns] 
 | |■Set Variable: CSelf41[Temp Item Display X] *= CSelf38[[Stored] Cursor Move H Amount] + 0 
 | |■Set Variable: CSelf41[Temp Item Display X] += CSelf34[[Stored] Cursor Base X] + 0 
 | |▼ Calculate Y position.
 | |■Set Variable: CSelf42[Temp Item Display Y] = CSelf43[Item Position Being Processed] / CSelf26[Columns] 
 | |■Set Variable: CSelf42[Temp Item Display Y] *= CSelf39[[Stored] Cursor Move V Amount] + 0 
 | |■Set Variable: CSelf42[Temp Item Display Y] += CSelf35[[Stored] Cursor Base Y] + 0 
 | |▼ Display cursor.
 | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 3 
 | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | |■Condition (Number):   [1] CSelf1[Cursor Position] >=  0  
 | |-◇Condition:  [1]  [ CSelf1[Cursor Position] >= 0   ] Case↓
 | | |▼ If the cursor position is 0 or higher, display.
 | | |■Set Variable: CSelf10[Temp Variable A] = CSelf41[Temp Item Display X] + 0 
 | | |■Set Variable: CSelf10[Temp Variable A] += CSelf36[[Stored] Cursor Width] / 2 
 | | |■Set Variable: CSelf11[Temp Variable B] = CSelf42[Temp Item Display Y] + 0 
 | | |■Set Variable: CSelf11[Temp Variable B] += CSelf37[[Stored] Cursor Height] / 2 
 | | |▼ Increase the size slightly, using the center as the origin.
 | | |■Set Variable: CSelf36[[Stored] Cursor Width] += CSelf88[Coordinate Scale X [x10]] / 2 
 | | |■Set Variable: CSelf37[[Stored] Cursor Height] += CSelf89[Coordinate Scale Y [x10]] / 4 
 | | |■Picture Show: CSelf21[Temp Picture ID] [Center] Window (CSelf9[Cursor Image File]) Size [CSelf36[[Stored] Cursor Width],CSelf37[[Stored] Cursor Height]] X:CSelf10[Temp Variable A] Y:CSelf11[Temp Variable B] / 0(0) Frames  / Pattern 1 / Opacity 255 / Add  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | | |■Effect Picture: CSelf21[Temp Picture ID] [Blink A (Flicker)] R100/G100/B100  Interval [20] Frames
 | | |■Set Variable: CSelf36[[Stored] Cursor Width] -= CSelf88[Coordinate Scale X [x10]] / 2 
 | | |■Set Variable: CSelf37[[Stored] Cursor Height] -= CSelf89[Coordinate Scale Y [x10]] / 4 
 | | |■
 | |-◇Else
 | | |▼ If the cursor position is -1 or less, erase.
 | | |■Picture Erase: CSelf21[Temp Picture ID]  / 0(0) Frames
 | | |■
 | |◇End◇
 | |■
 |◇Loop End Point◇◇
 |▼  
 |▼       Item Drawing Starts Here
 |▼  
 |■ Checkpoint ■■■■■■■■■■■■■■■■■■■■■■■■
 |▼ Redraw all items.
 |■Load DB(Var):  CSelf40[Total Items] = VarDB[ "Base System Variables":17:0 ] (18:Universal Window Item Count:Number) 
 |■Load DB(Var):  CSelf44[Scroll Position] = VarDB[ "Base System Variables":15:0 ] (18:Universal Window Vert. Scroll Pos:Number) 
 |▼ Calculate repeat count.
 |■Set Variable: CSelf40[Total Items] -= CSelf44[Scroll Position] * CSelf26[Columns] 
 |■Set Variable: CSelf40[Total Items] Upper Bound= CSelf26[Columns] * CSelf27[Rows] 
 |▼ Added in 2.02: When scrolling an entire page, update all.
 |■Set Variable: CSelf10[Temp Variable A] Absolute= CSelf45[Scroll Change Amount] + 0 
 |■Condition (Number):   [1] CSelf10[Temp Variable A] >=  CSelf40[Total Items]  
 |-◇Condition:  [1]  [ CSelf10[Temp Variable A] >= CSelf40[Total Items]   ] Case↓
 | |■Set Variable: CSelf29[Update-All Flag] = 1 + 0 
 | |■Set Variable: CSelf45[Scroll Change Amount] = 0 + 0 
 | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 9 
 | |■Set Variable: CSelf10[Temp Variable A] = CSelf20[Base Picture ID] + 999 
 | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] to CSelf10[Temp Variable A] 
 | |■Picture Erase: CSelf21[Temp Picture ID] to CSelf10[Temp Variable A]  / 0(0) Frames
 | |■
 |◇End◇
 |▼ Calculate the item position at which to start processing.
 |■Set Variable: CSelf43[Item Position Being Processed] = CSelf44[Scroll Position] * CSelf26[Columns] 
 |▼ Adjust according to the scroll position.
 |■Condition (Number):   [1] CSelf45[Scroll Change Amount] <=  -1  /  [2] CSelf45[Scroll Change Amount] >=  1  
 |-◇Condition:  [1]  [ CSelf45[Scroll Change Amount] <= -1   ] Case↓
 | |▼ If scrolled up, subtract "disappeared rows at the bottom" from the total items to be processed.
 | |■Set Variable: CSelf40[Total Items] -= CSelf45[Scroll Change Amount] * CSelf26[Columns] 
 | |■
 |-◇Condition:  [2]  [ CSelf45[Scroll Change Amount] >= 1   ] Case↓
 | |▼ If scrolled down, add "disappeared rows at the top" to the total items to be processed, and subtract it from the starting item position.
 | |■Set Variable: CSelf40[Total Items] += CSelf45[Scroll Change Amount] * CSelf26[Columns] 
 | |■Set Variable: CSelf43[Item Position Being Processed] -= CSelf45[Scroll Change Amount] * CSelf26[Columns] 
 | |■
 |◇End◇
 |▼  
 |▼ Calculate the shift amount for the number display (used in \ax[ ] later).
 |▼ Change the shift amount calculation depending on the version. Modified in Ver.3.00.
 |■Condition (Number):   [1] Sys115:[RO] Game.exe Version (x100) <  300  /  [2] Sys115:[RO] Game.exe Version (x100) >=  300  
 |-◇Condition:  [1]  [ Sys115:[RO] Game.exe Version (x100) < 300   ] Case↓
 | |■Set Variable: CSelf47[Number Display Shift Amount] = CSelf36[[Stored] Cursor Width] * 1 
 | |■Condition (Number):   [1] Sys84:Screen Resolution (For Old/0-2/-1:Other) ==  0  
 | |-◇Condition:  [1]  [ Sys84:Screen Resolution (For Old/0-2/-1:Other) == 0   ] Case↓
 | | |▼ A 2x adjustment is required only when the resolution is 320x240 (for using \ax[?]).
 | | |■Set Variable: CSelf47[Number Display Shift Amount] = CSelf36[[Stored] Cursor Width] * 2 
 | | |■
 | |◇End◇
 | |■
 |-◇Condition:  [2]  [ Sys115:[RO] Game.exe Version (x100) >= 300   ] Case↓
 | |▼ Since version 3.00, adjust using Sys119 "Screen Resolution Multiplier". Modified in Ver.3.00.
 | |■Set Variable: CSelf47[Number Display Shift Amount] = CSelf36[[Stored] Cursor Width] * Sys119:[RO] Screen Resolution Multiplier x[1-3] 
 | |■
 |◇End◇
 |▼ Display items one by one as pictures.
 |■Repeat Loop [ CSelf40[Total Items] ] Times
 | |▼ Calculate X position.
 | |■Set Variable: CSelf41[Temp Item Display X] = CSelf43[Item Position Being Processed] % CSelf26[Columns] 
 | |■Set Variable: CSelf41[Temp Item Display X] *= CSelf38[[Stored] Cursor Move H Amount] + 0 
 | |■Set Variable: CSelf41[Temp Item Display X] += CSelf34[[Stored] Cursor Base X] + 0 
 | |▼ Calculate Y position.
 | |■Set Variable: CSelf42[Temp Item Display Y] = CSelf43[Item Position Being Processed] / CSelf26[Columns] 
 | |■Set Variable: CSelf42[Temp Item Display Y] -= CSelf44[Scroll Position] + 0 
 | |■Set Variable: CSelf42[Temp Item Display Y] *= CSelf39[[Stored] Cursor Move V Amount] + 0 
 | |■Set Variable: CSelf42[Temp Item Display Y] += CSelf35[[Stored] Cursor Base Y] + 0 
 | |▼  
 | |■Set Variable: CSelf48[Item Display Start Y] = CSelf42[Temp Item Display Y] + 0 
 | |▼ Display item (up to 200).
 | |■Set Variable: CSelf21[Temp Picture ID] = CSelf43[Item Position Being Processed] % 200 
 | |■Set Variable: CSelf21[Temp Picture ID] += CSelf20[Base Picture ID] + 9 
 | |▼ Display.
 | |■Set Variable: CSelf46[Single Item Display Flag] = 0 + 0 
 | |■Condition (Number):   [1] CSelf29[Update-All Flag] ==  1  
 | |-◇Condition:  [1]  [ CSelf29[Update-All Flag] == 1   ] Case↓
 | | |■Set Variable: CSelf46[Single Item Display Flag] = 1 + 0 
 | | |■
 | |-◇Else
 | | |▼ Determine if it's necessary to display the next item.
 | | |▼ First, display is only necessary when scrolling up or down.
 | | |■Condition (Number):   [1] CSelf45[Scroll Change Amount] <=  -1  /  [2] CSelf45[Scroll Change Amount] >=  1  
 | | |-◇Condition:  [1]  [ CSelf45[Scroll Change Amount] <= -1   ] Case↓
 | | | |▼ If scrolled up, only the top scrolled-in row is newly displayed.
 | | | |■Set Variable: CSelf10[Temp Variable A] = CSelf44[Scroll Position] * CSelf26[Columns] 
 | | | |■Set Variable: CSelf10[Temp Variable A] -= CSelf45[Scroll Change Amount] * CSelf26[Columns] 
 | | | |■Condition (Number):   [1] CSelf43[Item Position Being Processed] <  CSelf10[Temp Variable A]  
 | | | |-◇Condition:  [1]  [ CSelf43[Item Position Being Processed] < CSelf10[Temp Variable A]   ] Case↓
 | | | | |▼ Set display flag.
 | | | | |■Set Variable: CSelf46[Single Item Display Flag] = 1 + 0 
 | | | | |▼ Shift the initial Y position for display.
 | | | | |■Set Variable: CSelf48[Item Display Start Y] = CSelf42[Temp Item Display Y] + 0 
 | | | | |■Set Variable: CSelf48[Item Display Start Y] += CSelf45[Scroll Change Amount] * CSelf39[[Stored] Cursor Move V Amount] 
 | | | | |■
 | | | |◇End◇
 | | | |■
 | | |-◇Condition:  [2]  [ CSelf45[Scroll Change Amount] >= 1   ] Case↓
 | | | |▼ If scrolled down, only the bottom scrolled-in row is newly displayed.
 | | | |■Set Variable: CSelf10[Temp Variable A] = CSelf27[Rows] * CSelf26[Columns] 
 | | | |■Set Variable: CSelf10[Temp Variable A] += CSelf44[Scroll Position] * CSelf26[Columns] 
 | | | |■Set Variable: CSelf10[Temp Variable A] -= CSelf45[Scroll Change Amount] * CSelf26[Columns] 
 | | | |■Condition (Number):   [1] CSelf43[Item Position Being Processed] >=  CSelf10[Temp Variable A]  
 | | | |-◇Condition:  [1]  [ CSelf43[Item Position Being Processed] >= CSelf10[Temp Variable A]   ] Case↓
 | | | | |▼ Set display flag.
 | | | | |■Set Variable: CSelf46[Single Item Display Flag] = 1 + 0 
 | | | | |▼ Shift the initial Y position for display.
 | | | | |■Set Variable: CSelf48[Item Display Start Y] = CSelf42[Temp Item Display Y] + 0 
 | | | | |■Set Variable: CSelf48[Item Display Start Y] += CSelf45[Scroll Change Amount] * CSelf39[[Stored] Cursor Move V Amount] 
 | | | | |■
 | | | |◇End◇
 | | | |■
 | | |◇End◇
 | | |■
 | |◇End◇
 | |■Condition (Number):   [1] CSelf46[Single Item Display Flag] ==  1  
 | |-◇Condition:  [1]  [ CSelf46[Single Item Display Flag] == 1   ] Case↓
 | | |▼ Create item texts to display.
 | | |■Load DB(Var):  CSelf7[Item Name] = VarDB[ "Universal Window Items":CSelf43[Item Position Being Processed]:"Item Text" ] (19:-:0) 
 | | |■Load DB(Var):  CSelf11[Temp Variable B] = VarDB[ "Universal Window Items":CSelf43[Item Position Being Processed]:"Quantity Left/Point Cost" ] (19:-:3) 
 | | |■Condition (Number):   [1] CSelf11[Temp Variable B] <=  0  
 | | |-◇Condition:  [1]  [ CSelf11[Temp Variable B] <= 0   ] Case↓
 | | | |■Set String: CSelf6[Additional String] = ""
 | | | |■Load DB(Var):  CSelf6[Additional String] += VarDB[ "Universal Window Items":CSelf43[Item Position Being Processed]:"Number Suffix" ] (19:-:5) 
 | | | |■
 | | |-◇Else
 | | | |■Load DB(Var):  CSelf6[Additional String] = VarDB[ "Universal Window Items":CSelf43[Item Position Being Processed]:"Number Prefix" ] (19:-:4) 
 | | | |■Condition (Number):   [1] CSelf11[Temp Variable B] <  10  
 | | | |-◇Condition:  [1]  [ CSelf11[Temp Variable B] < 10   ] Case↓
 | | | | |■Set String: CSelf6[Additional String] += " \cself[11]"
 | | | | |■
 | | | |-◇Else
 | | | | |■Set String: CSelf6[Additional String] += "\cself[11]"
 | | | | |■
 | | | |◇End◇
 | | | |■Load DB(Var):  CSelf6[Additional String] += VarDB[ "Universal Window Items":CSelf43[Item Position Being Processed]:"Number Suffix" ] (19:-:5) 
 | | | |■
 | | |◇End◇
 | | |▼ Display only the item name as a picture, and get the picture's width.
 | | |■Set Variable: CSelf49[Item Horizontal Zoom Level] = 100 + 0 
 | | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | | |■Picture Show: CSelf21[Temp Picture ID] [Top-Left] String [\f[\cself[19]]\c] X:CSelf41[Temp Item Display X] Y:CSelf48[Item Display Start Y] / 0(0) Frames  / Pattern 1 / Opacity 0 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | | |■Repeat Loop [ 1 ] Times
 | | | |▼ If the text exceeds a certain percentage of the cursor width, shrink its width.
 | | | |■Set Variable+: CSelf11[Temp Variable B] = Picture: CSelf21[Temp Picture ID]'s Image Size (Width)
 | | | |■Condition (String):   [1] CSelf6[Additional String] Is Equal to ""
 | | | |-◇Condition:  [1] [ CSelf6[Additional String] Is Equal to "" ] Case↓
 | | | | |▼ If there's no numeric part, check whether the text exceeds the cursor width.
 | | | | |■Set Variable: CSelf12[Temp Variable C] = CSelf36[[Stored] Cursor Width] + 0 
 | | | | |■
 | | | |-◇Else
 | | | | |▼ If there's a numeric part, add 2.5-character space before calculating.
 | | | | |■Set Variable: CSelf12[Temp Variable C] = CSelf36[[Stored] Cursor Width] + 0 
 | | | | |■Set Variable: CSelf12[Temp Variable C] -= CSelf88[Coordinate Scale X [x10]] * 2 
 | | | | |■Set Variable: CSelf12[Temp Variable C] -= CSelf88[Coordinate Scale X [x10]] / 2 
 | | | | |■
 | | | |◇End◇
 | | | |▼ If it exceeds the cursor width, reduce the horizontal zoom level.
 | | | |■Condition (Number):   [1] CSelf11[Temp Variable B] >  CSelf12[Temp Variable C]  
 | | | |-◇Condition:  [1]  [ CSelf11[Temp Variable B] > CSelf12[Temp Variable C]   ] Case↓
 | | | | |■Set Variable: CSelf12[Temp Variable C] *= 100 + 0 
 | | | | |■Set Variable: CSelf49[Item Horizontal Zoom Level] = CSelf12[Temp Variable C] / CSelf11[Temp Variable B] 
 | | | | |▼ Add shift amount.
 | | | | |■Set Variable: CSelf12[Temp Variable C] = 10000 / CSelf49[Item Horizontal Zoom Level] 
 | | | | |■Set Variable: CSelf12[Temp Variable C] *= CSelf47[Number Display Shift Amount] + 0 
 | | | | |■Set Variable: CSelf12[Temp Variable C] /= 100 + 0 
 | | | | |■
 | | | |-◇Else
 | | | | |▼ If the cursor width is normal, store it here.
 | | | | |■Set Variable: CSelf12[Temp Variable C] = CSelf47[Number Display Shift Amount] + 0 
 | | | | |■
 | | | |◇End◇
 | | | |▼ Set the item color here.
 | | | |▼ If selectable, white. If not selectable, dark blue.
 | | | |■Set Variable: CSelf53[Color R] to CSelf55[Color B] = 100 + 0 
 | | | |■Load DB(Var):  CSelf10[Temp Variable A] = VarDB[ "Universal Window Items":CSelf43[Item Position Being Processed]:"Selectable? [1:Yes]" ] (19:-:2) 
 | | | |■Condition (Number):   [1] CSelf10[Temp Variable A] ==  0  
 | | | |-◇Condition:  [1]  [ CSelf10[Temp Variable A] == 0   ] Case↓
 | | | | |■Set Variable: CSelf53[Color R] = 50 + 0 
 | | | | |■Set Variable: CSelf54[Color G] = 50 + 0 
 | | | | |■Set Variable: CSelf55[Color B] = 70 + 0 
 | | | | |■
 | | | |◇End◇
 | | | |▼ Using \ax[] and \ay[], put both the item name and the number in one picture.
 | | | |■Condition (Number):   [1] CSelf3[[Disp] Animation] ==  0  
 | | | |-◇Condition:  [1]  [ CSelf3[[Disp] Animation] == 0   ] Case↓
 | | | | |▼ If the window is displayed instantly without animation, the item starts with opacity 255.
 | | | | |■Set Variable: CSelf57[Temp Opacity] = 255 + 0 
 | | | | |■
 | | | |-◇Else
 | | | | |■Set Variable: CSelf57[Temp Opacity] = 0 + 0 
 | | | | |■
 | | | |◇End◇
 | | | |■Condition (Number):   [1] CSelf60[Item Left-Align Flag (Off = Center)] ==  0  
 | | | |-◇Condition:  [1]  [ CSelf60[Item Left-Align Flag (Off = Center)] == 0   ] Case↓
 | | | | |■Set String: CSelf7[Item Name] = "<C>\cself[7]"
 | | | | |■
 | | | |◇End◇
 | | | |■Picture Show: CSelf21[Temp Picture ID] [Top-Left] String [\f[\cself[19]]\c] X:CSelf41[Temp Item Display X] Y:CSelf48[Item Display Start Y] / 0(0) Frames  / Pattern 1 / Opacity CSelf57[Temp Opacity] / Normal  / Angle 0 / Zoom CSelf49[Item Horizontal Zoom Level]x100% / Color R[CSelf53[Color R]] G[CSelf54[Color G]] B[CSelf55[Color B]]
 | | | |■
 | | |◇Loop End Point◇◇
 | | |■
 | |◇End◇
 | |▼ Picture movement due to scrolling is processed here (required after display).
 | |■Condition (Number):   [1] CSelf29[Update-All Flag] ==  1  
 | |-◇Condition:  [1]  [ CSelf29[Update-All Flag] == 1   ] Case↓
 | | |▼ Animation when updating all items is executed here.
 | | |■Picture Move: CSelf21[Temp Picture ID]  X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 5(3) Frames  / Pattern Same / Opacity 255 / Blend Mode: Same   / Angle Same / Zoom Same / Color Same
 | | |■
 | |-◇Else
 | | |▼ If there's scroll movement, move or erase the picture.
 | | |■Condition (Number):   [1] CSelf45[Scroll Change Amount] <=  -1  /  [2] CSelf45[Scroll Change Amount] >=  1  
 | | |-◇Condition:  [1]  [ CSelf45[Scroll Change Amount] <= -1   ] Case↓
 | | | |▼ If scrolled up, only the bottom scrolled-out row is erased.
 | | | |■Set Variable: CSelf10[Temp Variable A] = CSelf27[Rows] * CSelf26[Columns] 
 | | | |■Set Variable: CSelf10[Temp Variable A] += CSelf44[Scroll Position] * CSelf26[Columns] 
 | | | |■Condition (Number):   [1] CSelf43[Item Position Being Processed] >=  CSelf10[Temp Variable A]  
 | | | |-◇Condition:  [1]  [ CSelf43[Item Position Being Processed] >= CSelf10[Temp Variable A]   ] Case↓
 | | | | |▼ Erase while moving.
 | | | | |■Picture Move: CSelf21[Temp Picture ID]  X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 5(0) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom Same / Color Same
 | | | | |■Picture Move: CSelf21[Temp Picture ID]  X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 5(3) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom Same / Color Same
 | | | | |■Picture Erase: CSelf21[Temp Picture ID]  / 0(8) Frames
 | | | | |■
 | | | |-◇Else
 | | | | |▼ If not scrolled out, only move.
 | | | | |■Picture Move: CSelf21[Temp Picture ID]  X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 5(0) Frames  / Pattern Same / Opacity 255 / Blend Mode: Same   / Angle Same / Zoom Same / Color Same
 | | | | |■Picture Move: CSelf21[Temp Picture ID]  X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 5(3) Frames  / Pattern Same / Opacity 255 / Blend Mode: Same   / Angle Same / Zoom Same / Color Same
 | | | | |■
 | | | |◇End◇
 | | | |■
 | | |-◇Condition:  [2]  [ CSelf45[Scroll Change Amount] >= 1   ] Case↓
 | | | |▼ If scrolled down, only the top scrolled-out row is erased.
 | | | |■Set Variable: CSelf10[Temp Variable A] = CSelf44[Scroll Position] * CSelf26[Columns] 
 | | | |■Condition (Number):   [1] CSelf43[Item Position Being Processed] <  CSelf10[Temp Variable A]  
 | | | |-◇Condition:  [1]  [ CSelf43[Item Position Being Processed] < CSelf10[Temp Variable A]   ] Case↓
 | | | | |▼ Erase while moving.
 | | | | |■Picture Move: CSelf21[Temp Picture ID]  X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 5(0) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom Same / Color Same
 | | | | |■Picture Move: CSelf21[Temp Picture ID]  X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 5(3) Frames  / Pattern Same / Opacity 0 / Blend Mode: Same   / Angle Same / Zoom Same / Color Same
 | | | | |■Picture Erase: CSelf21[Temp Picture ID]  / 0(8) Frames
 | | | | |■
 | | | |-◇Else
 | | | | |▼ If not scrolled out, only move.
 | | | | |■Picture Move: CSelf21[Temp Picture ID]  X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 5(0) Frames  / Pattern Same / Opacity 255 / Blend Mode: Same   / Angle Same / Zoom Same / Color Same
 | | | | |■Picture Move: CSelf21[Temp Picture ID]  X:CSelf41[Temp Item Display X] Y:CSelf42[Temp Item Display Y] / 5(3) Frames  / Pattern Same / Opacity 255 / Blend Mode: Same   / Angle Same / Zoom Same / Color Same
 | | | | |■
 | | | |◇End◇
 | | | |■
 | | |◇End◇
 | | |■
 | |◇End◇
 | |■Set Variable: CSelf43[Item Position Being Processed] += 1 + 0 
 | |■
 |◇Loop End Point◇◇
 |■Repeat Loop [ 1 ] Times
 | |▼ Display description text. (Only if it was in display mode.)
 | |■Condition (Number):   [1] CSelf1[Cursor Position] >=  0  
 | |-◇Condition:  [1]  [ CSelf1[Cursor Position] >= 0   ] Case↓
 | | |▼ Check whether the picture for the description text is already displayed.
 | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 2 
 | | |■Set Variable+: CSelf10[Temp Variable A] = Picture: CSelf21[Temp Picture ID]'s Picture in Use? [1:Yes]
 | | |■Condition (Number):   [1] CSelf10[Temp Variable A] ==  1  
 | | |-◇Condition:  [1]  [ CSelf10[Temp Variable A] == 1   ] Case↓
 | | | |■Load DB(Var):  CSelf5[Description Text] = VarDB[ "Universal Window Items":CSelf1[Cursor Position]:"Description" ] (19:-:6) 
 | | | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | | | |■Picture Show: CSelf21[Temp Picture ID] [Center] String [\f[\cself[18]]\s] Relative X:0 Y:0 / 0(0) Frames  / Pattern Same / Opacity Same / Blend Mode: Same   / Angle Same / Zoom Same / Color Same
 | | | |■
 | | |◇End◇
 | | |■
 | |◇End◇
 | |■
 |◇Loop End Point◇◇
 |■Repeat Loop [ 1 ] Times
 | |▼ Display up and down arrows.
 | |■Repeat Loop [ 1 ] Times
 | | |▼ If there are unseen items above, display an arrow at the top.
 | | |■Load DB(Var):  CSelf44[Scroll Position] = VarDB[ "Base System Variables":15:0 ] (18:Universal Window Vert. Scroll Pos:Number) 
 | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 4 
 | | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | | |■Condition (Number):   [1] CSelf44[Scroll Position] >=  1  
 | | |-◇Condition:  [1]  [ CSelf44[Scroll Position] >= 1   ] Case↓
 | | | |■Set Variable: CSelf50[Up/Down Arrow X] = CSelf22[Display X] + 0 
 | | | |■Set Variable: CSelf50[Up/Down Arrow X] += CSelf24[Width] / 2 
 | | | |■Set Variable: CSelf51[Up/Down Arrow Y] = CSelf23[Display Y] + 0 
 | | | |■Picture Show: CSelf21[Temp Picture ID] [Center] String [\f[\cself[18]]\E] X:CSelf50[Up/Down Arrow X] Y:CSelf51[Up/Down Arrow Y] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | | | |■
 | | |-◇Else
 | | | |■Picture Erase: CSelf21[Temp Picture ID]  / 0(0) Frames
 | | | |■
 | | |◇End◇
 | | |■
 | |◇Loop End Point◇◇
 | |■Repeat Loop [ 1 ] Times
 | | |▼ If not all items can be displayed, display an arrow at the bottom.
 | | |■Load DB(Var):  CSelf40[Total Items] = VarDB[ "Base System Variables":17:0 ] (18:Universal Window Item Count:Number) 
 | | |■Set Variable: CSelf10[Temp Variable A] = CSelf40[Total Items] / CSelf26[Columns] 
 | | |■Set Variable: CSelf10[Temp Variable A] -= CSelf27[Rows] + 0 
 | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 5 
 | | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | | |■Condition (Number):   [1] CSelf44[Scroll Position] <  CSelf10[Temp Variable A]  
 | | |-◇Condition:  [1]  [ CSelf44[Scroll Position] < CSelf10[Temp Variable A]   ] Case↓
 | | | |■Set Variable: CSelf50[Up/Down Arrow X] = CSelf22[Display X] + 0 
 | | | |■Set Variable: CSelf50[Up/Down Arrow X] += CSelf24[Width] / 2 
 | | | |■Set Variable: CSelf51[Up/Down Arrow Y] = CSelf23[Display Y] + 0 
 | | | |■Set Variable: CSelf51[Up/Down Arrow Y] += CSelf25[Height] + 0 
 | | | |■Picture Show: CSelf21[Temp Picture ID] [Center] String [\f[\cself[18]]\E] X:CSelf50[Up/Down Arrow X] Y:CSelf51[Up/Down Arrow Y] / 0(0) Frames  / Pattern 1 / Opacity 255 / Normal  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | | | |■
 | | |-◇Else
 | | | |■Picture Erase: CSelf21[Temp Picture ID]  / 0(0) Frames
 | | | |■
 | | |◇End◇
 | | |■
 | |◇Loop End Point◇◇
 | |■Repeat Loop [ 1 ] Times
 | | |▼ Add a scroll bar.
 | | |■Load DB(Var):  CSelf40[Total Items] = VarDB[ "Base System Variables":17:0 ] (18:Universal Window Item Count:Number) 
 | | |▼ CSelf10 is the total row count.
 | | |■Set Variable: CSelf10[Temp Variable A] = CSelf40[Total Items] / CSelf26[Columns] 
 | | |■Set Variable: CSelf11[Temp Variable B] = CSelf40[Total Items] % CSelf26[Columns] 
 | | |■Condition (Number):   [1] CSelf11[Temp Variable B] >=  1  
 | | |-◇Condition:  [1]  [ CSelf11[Temp Variable B] >= 1   ] Case↓
 | | | |▼ If there's even one item in the last row, add 1 to the row count.
 | | | |■Set Variable: CSelf10[Temp Variable A] += 1 + 0 
 | | | |■
 | | |◇End◇
 | | |■Set Variable: CSelf21[Temp Picture ID] = CSelf20[Base Picture ID] + 6 
 | | |■Picture [Reset Delay]: CSelf21[Temp Picture ID] 
 | | |■Condition (Number):   [1] CSelf61[Scroll Bar Display Flag] ==  1  
 | | |-◇Condition:  [1]  [ CSelf61[Scroll Bar Display Flag] == 1   ] Case↓
 | | | |■Condition (Number):   [1] CSelf10[Temp Variable A] <=  CSelf27[Rows]  
 | | | |-◇Condition:  [1]  [ CSelf10[Temp Variable A] <= CSelf27[Rows]   ] Case↓
 | | | | |■Picture Erase: CSelf21[Temp Picture ID]  / 0(0) Frames
 | | | | |■
 | | | |-◇Else
 | | | | |▼ Calculate the percentage of the total height that is currently visible, and calculate the scroll bar length.
 | | | | |■Set Variable: CSelf11[Temp Variable B] = CSelf27[Rows] * 100 
 | | | | |■Set Variable: CSelf11[Temp Variable B] /= CSelf10[Temp Variable A] + 0 
 | | | | |■Set Variable: CSelf11[Temp Variable B] = CSelf25[Height] * CSelf11[Temp Variable B] 
 | | | | |■Set Variable: CSelf11[Temp Variable B] /= 100 + 0 
 | | | | |▼ CSelf14 is the margin above and below the scroll bar.
 | | | | |■Set Variable: CSelf14[Temp Variable E] = CSelf89[Coordinate Scale Y [x10]] + 0 
 | | | | |▼ Calculate where the scroll bar is now.
 | | | | |■Set Variable: CSelf12[Temp Variable C] = CSelf25[Height] - CSelf11[Temp Variable B] 
 | | | | |■Set Variable: CSelf12[Temp Variable C] -= CSelf14[Temp Variable E] + 1 
 | | | | |■Set Variable: CSelf12[Temp Variable C] *= CSelf44[Scroll Position] + 0 
 | | | | |■Set Variable: CSelf12[Temp Variable C] /= CSelf10[Temp Variable A] - CSelf27[Rows] 
 | | | | |■Set Variable: CSelf12[Temp Variable C] += CSelf23[Display Y] + 0 
 | | | | |■Set Variable: CSelf12[Temp Variable C] += CSelf14[Temp Variable E] / 2 
 | | | | |▼ Calculate X position.
 | | | | |■Set Variable: CSelf13[Temp Variable D] = CSelf22[Display X] + CSelf24[Width] 
 | | | | |■Set Variable: CSelf13[Temp Variable D] -= 6 + 0 
 | | | | |■Picture Show: CSelf21[Temp Picture ID] [Top-Left] Window (CSelf9[Cursor Image File]) Size [5,CSelf11[Temp Variable B]] X:CSelf13[Temp Variable D] Y:CSelf12[Temp Variable C] / 0(0) Frames  / Pattern 1 / Opacity 255 / Add  / Angle 0 / Zoom 100% / Color R[100] G[100] B[100]
 | | | | |■
 | | | |◇End◇
 | | | |■
 | | |-◇Else
 | | | |▼ If no scroll bar, erase it here.
 | | | |■Picture Erase: CSelf21[Temp Picture ID]  / 0(0) Frames
 | | | |■
 | | |◇End◇
 | | |■
 | |◇Loop End Point◇◇
 | |■
 |◇Loop End Point◇◇
 |▼  
 |■Exit Event
 |■
◇End◇
■
[COMMAND_TEXT_END]
